{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/2favicon.ico","path":"2favicon.ico","modified":1,"renderable":0},{"_id":"source/avatar/avatar.jpg","path":"avatar/avatar.jpg","modified":1,"renderable":0},{"_id":"source/avatar/avatar1.jpg","path":"avatar/avatar1.jpg","modified":1,"renderable":0},{"_id":"source/img/3px-tile.png","path":"img/3px-tile.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.js","path":"main.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/style.js","path":"style.js","modified":1,"renderable":1},{"_id":"source/img/football-no-lines.png","path":"img/football-no-lines.png","modified":1,"renderable":0}],"Cache":[{"_id":"themes/yilia/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477014805806},{"_id":"source/404.html","hash":"30b1e8c132d230da793abf9a39244cec6657e8e4","modified":1429351302000},{"_id":"source/CNAME","hash":"ba92a2b1bafeb7027e00b88faa52687a713b0864","modified":1476761986000},{"_id":"source/favicon.ico","hash":"e2f951540913c5fe254209eaa73af16a17e9d9cf","modified":1476759322000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1476667172000},{"_id":"themes/yilia/.gitignore","hash":"68eaa79f92481f95dd412ac44de1837fe2e5d9dd","modified":1477015960302},{"_id":"themes/yilia/_config.yml","hash":"048f253d3efc2cabcde147d0b834905c971eae16","modified":1477018190026},{"_id":"themes/yilia/package.json","hash":"00617be92734bd435ec21614c445bed23cf7448d","modified":1476691150000},{"_id":"themes/yilia/webpack.config.js","hash":"ccf5929d2727b00e76266f9f5d6edc0bc74539dc","modified":1476667172000},{"_id":"source/2favicon.ico","hash":"a1e455366b08099bad871f6e9b0b78ec2f1061dd","modified":1476759100000},{"_id":"source/_posts/2016-10-13-MD-Example.md","hash":"1995f4cb246c7dba15c2975acb6052938784c491","modified":1477017321178},{"_id":"source/_posts/2016-10-17-npm.md","hash":"8f736ff1da6207b5b1113612df3e354abeafd2ce","modified":1477017290002},{"_id":"source/_posts/2016-10-17-node安装.md","hash":"7c98894596e3b14161b88310e3b58039a2e265db","modified":1477017299162},{"_id":"source/_posts/2016-10-17-博客主题修改部署问题.md","hash":"c99c9af8fc12ece5f7c81e224820f1a249f0be02","modified":1477017309138},{"_id":"source/_posts/2016-10-19-webpack.md","hash":"8d4380556a4f0a9a73d738e7731e34013c0149f0","modified":1477017283206},{"_id":"source/_posts/2016-10-21-GIT同时配置两个SSH.md","hash":"bb82c3b40b386d28e6f95ee582b2b7373e766136","modified":1477030823370},{"_id":"source/_posts/2016-10-21-前段框架搭建问题汇总-1.md","hash":"f108318e9c3fa7f8b9c6ecda9ebeea5be5315361","modified":1477020194686},{"_id":"source/_posts/hello-world.html","hash":"f966538c7c74a200f3d6f650230f8e33f0e965cb","modified":1477017456434},{"_id":"source/avatar/avatar.jpg","hash":"fe90c70901709bec0287e4150844685998eacb7a","modified":1476668098000},{"_id":"source/avatar/avatar1.jpg","hash":"6e5e6a79ee6b237cb2b0b188550464960c72c343","modified":1470300674000},{"_id":"source/img/3px-tile.png","hash":"9e0edb051b8944b0d1cf2e53f4e0a27b08f23570","modified":1476957759321},{"_id":"source/instagram/index.ejs","hash":"192a4556549af07f5c1d9ad3997c7d30cd8ebc0e","modified":1476426946000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1476667172000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1476667172000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1476667172000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1476667172000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1476667172000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1476667172000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1476667172000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1476667172000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1476667172000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1476667172000},{"_id":"themes/yilia/layout/layout.ejs","hash":"18bc94a020c6e74b0a7a29bc412670605e0c0873","modified":1476667172000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476667172000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476667172000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"ef0205fa690a388e48ddcb62ed77f05c753a7b9d","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"65e786ace35a89eb2ec3eaff406de88565cc0b82","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"aa30a2f2634d8f70e78b75a407a09421347ad52c","modified":1477017621090},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"9d24d167778e7d0da6baa74dcd90c739afb549d9","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"d78993618051392103df1107c0da5abb81e2acac","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"1ec178842b3e61b2cee09eb859e0209ee7712d59","modified":1476777158000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"324f809c7d1505cbf1ef3a479782c67ae90dfa81","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c5b92f83828e41a891c6db1d3e63cd2e007034e0","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1476667172000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1476667172000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1476667172000},{"_id":"themes/yilia/source-src/css/archive-inner.scss","hash":"c70d67116dd4a8ff0a10c397059823820f846dbd","modified":1476667172000},{"_id":"themes/yilia/source-src/css/archive-inner.css","hash":"f491f36a25c2993c031b96f4ca048f346fb0ec11","modified":1476672244000},{"_id":"themes/yilia/source-src/css/archive.css","hash":"e763597e142823ceaf91cd76d2a4c53bba2829e3","modified":1476672244000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"b750499d5120f963b683d0c96ac3f345c714e448","modified":1476667172000},{"_id":"themes/yilia/source-src/css/article-inner.css","hash":"767223292297fbfc4c0aba2b0305679725dcf647","modified":1476672244000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"eb1ee1fc425a6ba6b705ff0d1cc3695c1c04d1c5","modified":1476779788000},{"_id":"themes/yilia/source-src/css/article-main.css","hash":"5e654e229c8151ade4767ec69ba0a87ff77439e2","modified":1476672244000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"752498c2d75576600ccc3f4ac185f76120bd8746","modified":1476698086000},{"_id":"themes/yilia/source-src/css/article-nav.css","hash":"a1cd2ac8902167875ef8a0553056a0ce87339291","modified":1476672244000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"d046414a96adc400b54897fc236b3272e6deeafd","modified":1476667172000},{"_id":"themes/yilia/source-src/css/article.css","hash":"a416c371ea5385d802d01c8c597a621de84dc832","modified":1476672244000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"849dc2dd0258bc0ad256bab7c06bb0e3d32da065","modified":1476757828000},{"_id":"themes/yilia/source-src/css/duoshuo.css","hash":"15779c16bc41a846748936b6894673760e3bce48","modified":1476672244000},{"_id":"themes/yilia/source-src/css/duoshuo.scss","hash":"1a4be8634b8dcf271cebad1feb687e96a038ffbf","modified":1476667172000},{"_id":"themes/yilia/source-src/css/fonts.css","hash":"70693d7c30723fbc06e7dea309d170f0a4f4e76c","modified":1476672244000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"f5ee21869fcd3e2b257b49b0f680c78763d416dd","modified":1476667172000},{"_id":"themes/yilia/source-src/css/footer.css","hash":"e2bc00a881300fc9022ee609a6aea98f21017d8a","modified":1476672244000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1476667172000},{"_id":"themes/yilia/source-src/css/global.css","hash":"f483b4918a1ac5aae36b72df0d70bf10cb43a43e","modified":1476672244000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1476667172000},{"_id":"themes/yilia/source-src/css/grid.css","hash":"786ac1c1f8c644960ae40324a107531b87cecf0c","modified":1476672244000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"3307ee36c64cb48959ab124351d9e3b9d8110962","modified":1476957955809},{"_id":"themes/yilia/source-src/css/highlight.css","hash":"61c4772ab1463d783f5171896d7bee9d906d7c74","modified":1476672244000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"819774a2979d0d94eb4e3ebf62afc96f803bac67","modified":1476667172000},{"_id":"themes/yilia/source-src/css/left.css","hash":"f2c5f0839c4fee3d45fa0ce75737ae1ba77fc929","modified":1476759754000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0df34a24bcd5db6e7b0271185b917898d77aa6be","modified":1476957925761},{"_id":"themes/yilia/source-src/css/main.css","hash":"e686e713755da69751cb908fe9ee4ba0416b1b78","modified":1476672244000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"5ffabb8323ff8cd26be466c7e02a6affc0f08da7","modified":1476667172000},{"_id":"themes/yilia/source-src/css/mobile-slider.css","hash":"655764993a4aa0cd1d33b2bc38bd9a087d92747b","modified":1476672244000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"2112638e04babc404ad2a392d94d4fbe3eb94ff2","modified":1476759786000},{"_id":"themes/yilia/source-src/css/mobile.css","hash":"bd0bb3688a352cb43d98988748eb3db36bf3fae3","modified":1476672244000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"c170329ef2e7c2dcec58b1134793beac521133d4","modified":1476667172000},{"_id":"themes/yilia/source-src/css/page.css","hash":"adf5b5b33891b738de5399d2bc4ea10f88368870","modified":1476672244000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1476667172000},{"_id":"themes/yilia/source-src/css/scroll.css","hash":"65a1436b9e3e6f15ae056380071299bd73e21895","modified":1476672244000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1476667172000},{"_id":"themes/yilia/source-src/css/social.css","hash":"2bd957ff3de13a045eeeb3685f0e614c76744953","modified":1476672244000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"5b4a2cfd8a26687dc7bc44a4fa55ebb7d1ffe363","modified":1476667172000},{"_id":"themes/yilia/source-src/css/style.js","hash":"6c4cb072d0d5cbbb5291aa255dee31c7b13cfe66","modified":1476667172000},{"_id":"themes/yilia/source-src/css/switch.css","hash":"6a59e2c955c5341a6c707f45b9def5e658e6ff72","modified":1476672244000},{"_id":"themes/yilia/source-src/css/switch.scss","hash":"795b0d1ad5ff278933409a1ab7451483fe6ceae5","modified":1476667172000},{"_id":"themes/yilia/source-src/css/tags-cloud.css","hash":"206dfb8f26b8d4bb8ac0b4dda51080cf8c9538f7","modified":1476672244000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1476667172000},{"_id":"themes/yilia/source-src/css/tags.css","hash":"2fa0817092390d838a4bfdf14c05bcd624ead6d4","modified":1476672244000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"79d3fad4fcda15210410774089b0ee7fe8d58810","modified":1476667172000},{"_id":"themes/yilia/source-src/css/tools.css","hash":"79915c09f9b1e63d27638914d099ef90c4c1531e","modified":1476672244000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"c92aa91195696d1f2e5280a8db358593068e5e76","modified":1476667172000},{"_id":"themes/yilia/source-src/js/archive-inner.js","hash":"da4a770ccb23ca1ded23fa6475ce1379f0c10604","modified":1476667172000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"8ca48b006591bbf6d75688637c14fd1b5bdd650f","modified":1476667172000},{"_id":"themes/yilia/source-src/js/fix-page.js","hash":"f18e33e99b1032b95a60b018960bed64235c1a29","modified":1476667172000},{"_id":"themes/yilia/source-src/js/jquery.lazyload.js","hash":"37961302284435b2677b7fd1e0c0f7624e226e4a","modified":1476667172000},{"_id":"themes/yilia/source-src/js/main.js","hash":"a2dc03513509a04003185891c33d47f1de5c49dc","modified":1476667172000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d79f5f2d789e6cddfd7b502df238107e9c63aac","modified":1476667172000},{"_id":"themes/yilia/source-src/js/tags.js","hash":"f259b3f808df3a8523a42978f922bb9eda76e0ee","modified":1476667172000},{"_id":"themes/yilia/source-src/js/util.js","hash":"28c66c54cab81b2a6c8c393226f5bd30f369e1bb","modified":1476667172000},{"_id":"themes/yilia/source-src/js/tools.js","hash":"ed69771cd501770c2c303ae6ae695d2a9a187cdd","modified":1476667172000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"8b68f943b259bf6b4a648a10efe6c0160a880017","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.js","hash":"724162c14e5722a2ce1f44cf086dcea7b6855b80","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe-ui-default.min.js","hash":"38557bef17c33e172bc8e1670cd302d91622dfad","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.css","hash":"5cf582f8d8fbea91e4c1107d84655aadfad0b76a","modified":1476672244000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.min.js","hash":"e3267f5ae23f00c1ae052d019f12787296e34afc","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.scss","hash":"838d43529282b91a60934bbd39f3f9f5dbefee98","modified":1476667172000},{"_id":"themes/yilia/source/main.js","hash":"591b5266281ba1840ac4e64b24e371449145d57c","modified":1477012406442},{"_id":"themes/yilia/source/style.js","hash":"8fb389e6d3cb5e823729af8006079c92aeaf8c3b","modified":1477012406442},{"_id":"source/img/football-no-lines.png","hash":"63470b7b7d9c010e572585a2dcc9e6155c9c9e31","modified":1476779602000},{"_id":"themes/yilia/source-src/photoSwipe/photoswipe.js","hash":"ff9e3cc58b44a61144a9e211503755b170c24e91","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"62cde65a4ab7aef85a4390308bc7608f59463e02","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"2ab4308d013dcb1f0898cf112e3f75573e597e33","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"d9fa04c06319510bd088ca9c286af947da3cfb38","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"a59c83e46aaccb053b60bb41369dfcd6848cbd69","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"3a44b657ebdeed1764d90f81b43e91e5a8f25c21","modified":1476667172000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1476667172000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"6f44ec8ff32515280c0b7ea8ad7e4cb5f4dfcd84","modified":1476667172000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1476667172000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"dc89a3b360881584838cdd9b95fe88aae6518e50","modified":1476667172000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1476667172000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"19290f4d31d48351a9fbb8ddb1c7da7240743ae6","modified":1476758554000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.eot","hash":"9a661069e1255d10032926a8ef87502f445f4e20","modified":1476667172000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.ttf","hash":"9f1e824fc076dbfedf186609a2664558d5e3e986","modified":1476667172000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.svg","hash":"56ba63db8bfe20347e0457b4c583dd18e29ca701","modified":1476667172000},{"_id":"themes/yilia/source-src/css/fonts/icomoon.woff","hash":"a5c2eb785800a3a0aeaf2284d191d69df1893d6d","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/black-scales.png","hash":"243ea748d016704922ccfc0b6c18d97472c27bff","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.css","hash":"430b1ae8e23bfbf3f6ed7accc2ceebb2bd3cb6e3","modified":1476672244000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.scss","hash":"91f44576a5f5ccff4740ff5020656bd2f00ca13c","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1476667172000},{"_id":"themes/yilia/source-src/photoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1476667172000},{"_id":"themes/yilia/source-src/css/img/black-paper.png","hash":"a180d3109a5cb6b9b9aa60d81730446ebe275473","modified":1476667172000},{"_id":"themes/yilia/source-src/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1476667172000},{"_id":"themes/yilia/source-src/img/bg.jpg","hash":"26c57e7d92c6f909c80f18c53f61271088dcbf31","modified":1464830784000},{"_id":"public/instagram/index.html","hash":"a9cb59704ca9d077437d4fd2acda568e06ce6a6d","modified":1477030870783},{"_id":"public/2016/10/21/2016-10-21-GIT同时配置两个SSH/index.html","hash":"1f85d5206d8b14a80f65a268d8273f8bf8a02897","modified":1477030870783},{"_id":"public/2016/02/16/2016-10-19-webpack/index.html","hash":"1bbc404312effc44531b13540f0e0fdec7941577","modified":1477030870784},{"_id":"public/archives/2016/02/index.html","hash":"b3fc9dbf8a61f46f42179630db9d1c16005922d9","modified":1477030870784},{"_id":"public/archives/2016/07/index.html","hash":"26b582a8ad47c2553aed3ffe1f5a7d824b3bf550","modified":1477030870784},{"_id":"public/archives/2016/09/index.html","hash":"1a5543de2586908378e7d375d136ba54dfe1da54","modified":1477030870784},{"_id":"public/archives/2016/10/index.html","hash":"b9e56f9f1c6030501e40c90f138fc1ad5bb16013","modified":1477030870784},{"_id":"public/tags/Editor/index.html","hash":"635b5d4102495b19be42802fd67a80c796bd37e1","modified":1477030870784},{"_id":"public/tags/node/index.html","hash":"76087e1ac5b1268731ad4b11bb53aecf6d0965e4","modified":1477030870784},{"_id":"public/tags/nvm/index.html","hash":"c772240f5b368920793e07f7570500e9de8c7ec6","modified":1477030870784},{"_id":"public/tags/npm/index.html","hash":"2cbabeddf0a727dbc39a296895d371d7928acf5a","modified":1477030870784},{"_id":"public/tags/经验/index.html","hash":"d33c2d23b2fe7804b7969f0a310efb23ba3330ed","modified":1477030870784},{"_id":"public/tags/博客/index.html","hash":"feb18527eeab2c17c575be49dc652db88a49d0f9","modified":1477030870785},{"_id":"public/tags/note/index.html","hash":"3be3f1228c09b27ce5fb8bf9b2a70e5b82bf4149","modified":1477030870785},{"_id":"public/tags/webpack/index.html","hash":"21c5a739e75e67c02e6a5b50f61b00b98595e713","modified":1477030870785},{"_id":"public/tags/GIT/index.html","hash":"fbb0425be4a05e09ddf7ba09665b8fa76c0e0b62","modified":1477030870785},{"_id":"public/tags/SSH/index.html","hash":"bd169a1943de76964fcb43c31ae0aac0ed5c3e56","modified":1477030870785},{"_id":"public/tags/笔记/index.html","hash":"3922d31b4d941a5790ea65590ac073aa1262d600","modified":1477030870785},{"_id":"public/tags/框架搭建/index.html","hash":"e9d19d025da2c8b66797236bcb9a6f91dc2fcbb6","modified":1477030870785},{"_id":"public/tags/HTML5/index.html","hash":"acf25193f41d498095c5daa709739c5737635a48","modified":1477030870785},{"_id":"public/404.html","hash":"80c32b6e88d0641983cf5b94d6f37bac55c0c76c","modified":1477030870785},{"_id":"public/2016/10/12/2016-10-17-博客主题修改部署问题/index.html","hash":"49644f681bb2fa402c13cf145f33ba5210180a54","modified":1477030870785},{"_id":"public/2016/09/12/2016-10-13-MD-Example/index.html","hash":"1221e1429e36e47972b339d3c8e64b1c1d229046","modified":1477030870785},{"_id":"public/2016/07/12/2016-10-17-node安装/index.html","hash":"e1c8b8b680bce1e1d30ee23fda8caaa5e81f4023","modified":1477030870785},{"_id":"public/2016/02/17/2016-10-17-npm/index.html","hash":"d664a193cb84917f79b499400797fe83c2ceacca","modified":1477030870785},{"_id":"public/2016/02/17/hello-world/index.html","hash":"2c54509be17d957d5c9c4e8a467f177abda64a16","modified":1477030870785},{"_id":"public/2016/02/12/2016-10-21-前段框架搭建问题汇总-1/index.html","hash":"10dc7add850908a8723bb83bc5e7687ae163cb10","modified":1477030870786},{"_id":"public/archives/index.html","hash":"b753fd35e29a2fc0cc6bd4c705c5a4af281bffce","modified":1477030870786},{"_id":"public/archives/2016/index.html","hash":"85a9c39548c45d308647083168e97ad43dc6cd67","modified":1477030870786},{"_id":"public/index.html","hash":"ee33ff8b9798a2b31a1421f30d216134d977224f","modified":1477030870786},{"_id":"public/tags/前段/index.html","hash":"d735f5eb01a3b6c6aa375a8e607e33e46720b3b2","modified":1477030870786},{"_id":"public/CNAME","hash":"ba92a2b1bafeb7027e00b88faa52687a713b0864","modified":1477030870793},{"_id":"public/favicon.ico","hash":"e2f951540913c5fe254209eaa73af16a17e9d9cf","modified":1477030870793},{"_id":"public/avatar/avatar.jpg","hash":"fe90c70901709bec0287e4150844685998eacb7a","modified":1477030870793},{"_id":"public/avatar/avatar1.jpg","hash":"6e5e6a79ee6b237cb2b0b188550464960c72c343","modified":1477030870793},{"_id":"public/img/3px-tile.png","hash":"9e0edb051b8944b0d1cf2e53f4e0a27b08f23570","modified":1477030870793},{"_id":"public/2favicon.ico","hash":"a1e455366b08099bad871f6e9b0b78ec2f1061dd","modified":1477030870799},{"_id":"public/main.js","hash":"591b5266281ba1840ac4e64b24e371449145d57c","modified":1477030870804},{"_id":"public/style.js","hash":"8fb389e6d3cb5e823729af8006079c92aeaf8c3b","modified":1477030870805},{"_id":"public/img/football-no-lines.png","hash":"63470b7b7d9c010e572585a2dcc9e6155c9c9e31","modified":1477030870810}],"Category":[],"Data":[],"Page":[{"_content":"<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n    \n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n    \n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n    \n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n    \n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n    \n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n    \n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n    \n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n    \n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n    \n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n    \n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n    \n    if(r > rstop) discard;\n    \n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n    \n    col = mix(fadeCol, col, distancefade);\n    \n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n    \n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n    \n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n    \n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    \n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    \n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n    \n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n    \n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n    \n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n    \n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n    \n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n    \n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n    \n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    \n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n    \n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n    \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    \n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\t\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\t\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n    \n    if(vsh == null || fsh == null) {\n        return null;\n    }\n    \n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n    \n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n    \n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n    \n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n    \n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n    \n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n    \n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n    \n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n    \n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n    \n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n    \n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n    \n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    \n    unuseShader(pointFlower.program);\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n    \n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n    \n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n        \n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n        \n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n        \n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n        \n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n        \n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n        \n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n        \n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n    \n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n    \n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n    \n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    \n    var prog = pointFlower.program;\n    useShader(prog);\n    \n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    \n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    \n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n    \n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n    \n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n    \n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n    \n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n    \n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    \n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n        \n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n    \n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n    \n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n    \n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n    \n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n    \n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n    \n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n    \n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n    \n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n        \n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n    \n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n    \n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n    \n    gl.enable(gl.DEPTH_TEST);\n    \n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n    \n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    \n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n    \n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n    \n    window.addEventListener('resize', onResize);\n    \n    setViewports();\n    createScene();\n    initScene();\n    \n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","source":"404.html","raw":"<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n    \n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n    \n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n    \n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n    \n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n    \n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n    \n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n    \n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n    \n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n    \n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n    \n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n    \n    if(r > rstop) discard;\n    \n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n    \n    col = mix(fadeCol, col, distancefade);\n    \n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n    \n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n    \n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n    \n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    \n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    \n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n    \n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n    \n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n    \n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n    \n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n    \n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n    \n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n    \n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    \n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n    \n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n    \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    \n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\t\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\t\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n    \n    if(vsh == null || fsh == null) {\n        return null;\n    }\n    \n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n    \n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n    \n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n    \n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n    \n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n    \n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n    \n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n    \n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n    \n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n    \n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n    \n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n    \n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    \n    unuseShader(pointFlower.program);\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n    \n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n    \n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n        \n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n        \n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n        \n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n        \n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n        \n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n        \n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n        \n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n    \n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n    \n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n    \n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    \n    var prog = pointFlower.program;\n    useShader(prog);\n    \n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    \n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    \n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n    \n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n    \n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n    \n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n    \n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n    \n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    \n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n        \n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n    \n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n    \n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n    \n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n    \n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n    \n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n    \n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n    \n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n    \n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n        \n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n    \n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n    \n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n    \n    gl.enable(gl.DEPTH_TEST);\n    \n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n    \n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    \n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n    \n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n    \n    window.addEventListener('resize', onResize);\n    \n    setViewports();\n    createScene();\n    initScene();\n    \n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","date":"2016-10-21T02:03:57.062Z","updated":"2015-04-18T10:01:42.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ciuje1kpu0000d5u2xfko6z57","content":"<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n    \n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n    \n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n    \n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n    \n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n    \n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n    \n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n    \n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n    \n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n    \n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n    \n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n    \n    if(r > rstop) discard;\n    \n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n    \n    col = mix(fadeCol, col, distancefade);\n    \n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n    \n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n    \n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n    \n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    \n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    \n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n    \n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n    \n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n    \n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n    \n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n    \n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n    \n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n    \n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    \n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n    \n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n    \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    \n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\t\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\t\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n    \n    if(vsh == null || fsh == null) {\n        return null;\n    }\n    \n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n    \n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n    \n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n    \n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n    \n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n    \n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n    \n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n    \n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n    \n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n    \n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n    \n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n    \n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    \n    unuseShader(pointFlower.program);\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n    \n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n    \n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n        \n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n        \n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n        \n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n        \n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n        \n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n        \n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n        \n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n    \n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n    \n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n    \n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    \n    var prog = pointFlower.program;\n    useShader(prog);\n    \n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    \n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    \n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n    \n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n    \n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n    \n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n    \n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n    \n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    \n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n        \n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n    \n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n    \n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n    \n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n    \n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n    \n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n    \n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n    \n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n    \n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n        \n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n    \n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n    \n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n    \n    gl.enable(gl.DEPTH_TEST);\n    \n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n    \n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    \n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n    \n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n    \n    window.addEventListener('resize', onResize);\n    \n    setViewports();\n    createScene();\n    initScene();\n    \n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","excerpt":"","more":"<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n    \n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n    \n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n    \n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n    \n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n    \n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n    \n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n    \n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n    \n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n    \n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n    \n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n    \n    if(r > rstop) discard;\n    \n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n    \n    col = mix(fadeCol, col, distancefade);\n    \n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n    \n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n    \n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n    \n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n    \n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n    \n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n    \n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n    \n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n    \n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n    \n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n    \n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n    \n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n    \n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    \n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n    \n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n    \n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    \n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\t\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\t\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n    \n    if(vsh == null || fsh == null) {\n        return null;\n    }\n    \n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n    \n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n    \n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n    \n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n    \n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n    \n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n    \n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n    \n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n    \n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n    \n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n    \n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n    \n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    \n    unuseShader(pointFlower.program);\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n    \n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n    \n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n        \n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n        \n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n        \n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n        \n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n        \n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n    \n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n        \n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n        \n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n    \n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n    \n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n    \n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    \n    var prog = pointFlower.program;\n    useShader(prog);\n    \n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    \n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    \n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        \n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n    \n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n    \n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n    \n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n    \n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n    \n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    \n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n        \n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n    \n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n    \n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n    \n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n    \n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n    \n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n    \n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n    \n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n    \n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n        \n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n    \n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n    \n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n    \n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n    \n    gl.enable(gl.DEPTH_TEST);\n    \n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    \n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n    \n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    \n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n    \n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n    \n    window.addEventListener('resize', onResize);\n    \n    setViewports();\n    createScene();\n    initScene();\n    \n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n"},{"layout":"post","slug":"instagram","title":"相册","noDate":"true","comments":0,"_content":"\n<div class=\"instagram\" data-client-id=\"54dd6dbe94ea4f9b9792586ff30be4d3\">\n\t<a href=\"http://instagram.com/my_ray\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n","source":"instagram/index.ejs","raw":"---\nlayout: post\nslug: \"instagram\"\ntitle: \"相册\"\nnoDate: \"true\"\ncomments: false\n---\n\n<div class=\"instagram\" data-client-id=\"54dd6dbe94ea4f9b9792586ff30be4d3\">\n\t<a href=\"http://instagram.com/my_ray\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n","date":"2016-10-21T02:03:57.066Z","updated":"2016-10-14T06:35:46.000Z","path":"instagram/index.html","_id":"ciuje1krl0002d5u2aukhmhrr","content":"\n<div class=\"instagram\" data-client-id=\"54dd6dbe94ea4f9b9792586ff30be4d3\">\n\t<a href=\"http://instagram.com/my_ray\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n","excerpt":"","more":"\n<div class=\"instagram\" data-client-id=\"54dd6dbe94ea4f9b9792586ff30be4d3\">\n\t<a href=\"http://instagram.com/my_ray\" target=\"_blank\" class=\"open-ins\">图片来自instagram，正在加载中…</a>\n</div>\n"}],"Post":[{"title":"Editor","date":"2016-09-12T00:55:00.000Z","_content":"# Editor.md\nmd示例～\n\n<!-- more -->\n\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\n\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\n\n\n\n**目录 (Table of Contents)**\n\n[TOCM]\n\n[TOC]\n\n# Heading 1\n## Heading 2               \n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n\n#### 标题（用底线的形式）Heading (underline)\n\nThis is an H1\n=============\n\nThis is an H2\n-------------\n\n### 字符效果和横线等\n\n----\n\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\n*斜体字*      _斜体字_\n**粗体**  __粗体__\n***粗斜体*** ___粗斜体___\n\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\n\n**缩写(同HTML的abbr标签)**\n\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\n\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\n\n\n\n### 引用 Blockquotes\n\n> 引用文本 Blockquotes\n\n引用的行内混合 Blockquotes\n\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\n\n### 锚点与链接 Links\n\n[普通链接](http://localhost/)\n\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\n\n直接链接：<https://github.com>\n\n[锚点链接][anchor-id]\n\n[anchor-id]: http://www.this-anchor-link.com/\n\n[mailto:test.test@gmail.com](mailto:test.test@gmail.com)\n\nGFM a-tail link @pandao  邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com\n\n> @pandao\n\n### 多语言代码高亮 Codes\n\n#### 行内代码 Inline code\n\n执行命令：`npm install marked`\n\n#### 缩进风格\n\n即缩进四个空格，也做为实现类似 `<pre>` 预格式化文本 ( Preformatted Text ) 的功能。\n\n    <?php\n        echo \"Hello world!\";\n    ?>\n\n预格式化文本：\n\n    | First Header  | Second Header |\n    | ------------- | ------------- |\n    | Content Cell  | Content Cell  |\n    | Content Cell  | Content Cell  |\n\n#### JS代码　\n\n```javascript\nfunction test() {\n\tconsole.log(\"Hello world!\");\n}\n\n(function(){\n    var box = function() {\n        return box.fn.init();\n    };\n\n    box.prototype = box.fn = {\n        init : function(){\n            console.log('box.init()');\n\n\t\t\treturn this;\n        },\n\n\t\tadd : function(str) {\n\t\t\talert(\"add\", str);\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove : function(str) {\n\t\t\talert(\"remove\", str);\n\n\t\t\treturn this;\n\t\t}\n    };\n\n    box.fn.init.prototype = box.fn;\n\n    window.box =box;\n})();\n\nvar testBox = box();\ntestBox.add(\"jQuery\").remove(\"jQuery\");\n```\n\n#### HTML 代码 HTML codes\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <mate charest=\"utf-8\" />\n        <meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" />\n        <title>Hello world!</title>\n        <style type=\"text/css\">\n            body{font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;}\n            ul{list-style: none;}\n            img{border:none;vertical-align: middle;}\n        </style>\n    </head>\n    <body>\n        <h1 class=\"text-xxl\">Hello world!</h1>\n        <p class=\"text-green\">Plain text</p>\n    </body>\n</html>\n```\n\n### 图片 Images\n\nImage:\n\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\n\n> Follow your heart.\n\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\n\n> 图为：厦门白城沙滩\n\n图片加链接 (Image + Link)：\n\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/images/7.jpg \"李健首张专辑《似水流年》封面\")\n\n> 图为：李健首张专辑《似水流年》封面\n\n----\n\n### 列表 Lists\n\n#### 无序列表（减号）Unordered Lists (-)\n\n- 列表一\n- 列表二\n- 列表三\n\n#### 无序列表（星号）Unordered Lists (*)\n\n* 列表一\n* 列表二\n* 列表三\n\n#### 无序列表（加号和嵌套）Unordered Lists (+)\n\n+ 列表一\n+ 列表二\n    + 列表二-1\n    + 列表二-2\n    + 列表二-3\n+ 列表三\n    * 列表一\n    * 列表二\n    * 列表三\n\n#### 有序列表 Ordered Lists (-)\n\n1. 第一行\n2. 第二行\n3. 第三行\n\n#### GFM task list\n\n- [x] GFM task list 1\n- [x] GFM task list 2\n- [ ] GFM task list 3\n    - [ ] GFM task list 3-1\n    - [ ] GFM task list 3-2\n    - [ ] GFM task list 3-3\n- [ ] GFM task list 4\n    - [ ] GFM task list 4-1\n    - [ ] GFM task list 4-2\n\n----\n\n### 绘制表格 Tables\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机      | $1600   |   5     |\n| 手机        |   $12   |   12   |\n| 管线        |    $1    |  234  |\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\n| Function name | Description                    |\n| ------------- | ------------------------------ |\n| `help()`      | Display the help window.       |\n| `destroy()`   | **Destroy your computer!**     |\n\n| Left-Aligned  | Center Aligned  | Right Aligned |\n| :------------ |:---------------:| -----:|\n| col 3 is      | some wordy text | $1600 |\n| col 2 is      | centered        |   $12 |\n| zebra stripes | are neat        |    $1 |\n\n| Item      | Value |\n| --------- | -----:|\n| Computer  | $1600 |\n| Phone     |   $12 |\n| Pipe      |    $1 |\n\n----\n\n#### 特殊符号 HTML Entities Codes\n\n&copy; &  &uml; &trade; &iexcl; &pound;\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot;\n\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\n\n18&ordm;C  &quot;  &apos;\n\n[========]\n\n### Emoji表情 :smiley:\n\n> Blockquotes :star:\n\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\n\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\n- [x] [ ] :smiley: this is a complete item :smiley:;\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao;\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\n\n#### 反斜杠 Escape\n\n\\*literal asterisks\\*\n\n[========]\n\n### 科学公式 TeX(KaTeX)\n\n$$E=mc^2$$\n\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\n\n$$x > y$$\n\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\n\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\n\n多行公式：\n\n```math\n\\displaystyle\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\n\\leq\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\n```\n\n```katex\n\\displaystyle\n    \\frac{1}{\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\n        1+\\frac{e^{-6\\pi}}\n        {1+\\frac{e^{-8\\pi}}\n         {1+\\cdots} }\n        }\n    }\n```\n\n```latex\nf(x) = \\int_{-\\infty}^\\infty\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\n    \\,d\\xi\n```\n\n### 分页符 Page break\n\n> Print Test: Ctrl + P\n\n[========]\n\n### 绘制流程图 Flowchart\n\n```flow\nst=>start: 用户登陆\nop=>operation: 登陆操作\ncond=>condition: 登陆成功 Yes or No?\ne=>end: 进入后台\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n[========]\n\n### 绘制序列图 Sequence Diagram\n\n```seq\nAndrew->China: Says Hello\nNote right of China: China thinks\\nabout it\nChina-->Andrew: How are you?\nAndrew->>China: I am good thanks!\n```\n\n### End\n","source":"_posts/2016-10-13-MD-Example.md","raw":"---\ntitle: Editor\ndate: 2016-09-12 08:55\ntags:\n- Editor\n---\n# Editor.md\nmd示例～\n\n<!-- more -->\n\n![](https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png)\n\n![](https://img.shields.io/github/stars/pandao/editor.md.svg) ![](https://img.shields.io/github/forks/pandao/editor.md.svg) ![](https://img.shields.io/github/tag/pandao/editor.md.svg) ![](https://img.shields.io/github/release/pandao/editor.md.svg) ![](https://img.shields.io/github/issues/pandao/editor.md.svg) ![](https://img.shields.io/bower/v/editor.md.svg)\n\n\n\n**目录 (Table of Contents)**\n\n[TOCM]\n\n[TOC]\n\n# Heading 1\n## Heading 2               \n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n# Heading 1 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n## Heading 2 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n### Heading 3 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n#### Heading 4 link [Heading link](https://github.com/pandao/editor.md \"Heading link\") Heading link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n##### Heading 5 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n###### Heading 6 link [Heading link](https://github.com/pandao/editor.md \"Heading link\")\n\n#### 标题（用底线的形式）Heading (underline)\n\nThis is an H1\n=============\n\nThis is an H2\n-------------\n\n### 字符效果和横线等\n\n----\n\n~~删除线~~ <s>删除线（开启识别HTML标签时）</s>\n*斜体字*      _斜体字_\n**粗体**  __粗体__\n***粗斜体*** ___粗斜体___\n\n上标：X<sub>2</sub>，下标：O<sup>2</sup>\n\n**缩写(同HTML的abbr标签)**\n\n> 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启\n\nThe <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.\n\n\n\n### 引用 Blockquotes\n\n> 引用文本 Blockquotes\n\n引用的行内混合 Blockquotes\n\n> 引用：如果想要插入空白换行`即<br />标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](http://localhost/)。\n\n### 锚点与链接 Links\n\n[普通链接](http://localhost/)\n\n[普通链接带标题](http://localhost/ \"普通链接带标题\")\n\n直接链接：<https://github.com>\n\n[锚点链接][anchor-id]\n\n[anchor-id]: http://www.this-anchor-link.com/\n\n[mailto:test.test@gmail.com](mailto:test.test@gmail.com)\n\nGFM a-tail link @pandao  邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com\n\n> @pandao\n\n### 多语言代码高亮 Codes\n\n#### 行内代码 Inline code\n\n执行命令：`npm install marked`\n\n#### 缩进风格\n\n即缩进四个空格，也做为实现类似 `<pre>` 预格式化文本 ( Preformatted Text ) 的功能。\n\n    <?php\n        echo \"Hello world!\";\n    ?>\n\n预格式化文本：\n\n    | First Header  | Second Header |\n    | ------------- | ------------- |\n    | Content Cell  | Content Cell  |\n    | Content Cell  | Content Cell  |\n\n#### JS代码　\n\n```javascript\nfunction test() {\n\tconsole.log(\"Hello world!\");\n}\n\n(function(){\n    var box = function() {\n        return box.fn.init();\n    };\n\n    box.prototype = box.fn = {\n        init : function(){\n            console.log('box.init()');\n\n\t\t\treturn this;\n        },\n\n\t\tadd : function(str) {\n\t\t\talert(\"add\", str);\n\n\t\t\treturn this;\n\t\t},\n\n\t\tremove : function(str) {\n\t\t\talert(\"remove\", str);\n\n\t\t\treturn this;\n\t\t}\n    };\n\n    box.fn.init.prototype = box.fn;\n\n    window.box =box;\n})();\n\nvar testBox = box();\ntestBox.add(\"jQuery\").remove(\"jQuery\");\n```\n\n#### HTML 代码 HTML codes\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <mate charest=\"utf-8\" />\n        <meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" />\n        <title>Hello world!</title>\n        <style type=\"text/css\">\n            body{font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;}\n            ul{list-style: none;}\n            img{border:none;vertical-align: middle;}\n        </style>\n    </head>\n    <body>\n        <h1 class=\"text-xxl\">Hello world!</h1>\n        <p class=\"text-green\">Plain text</p>\n    </body>\n</html>\n```\n\n### 图片 Images\n\nImage:\n\n![](https://pandao.github.io/editor.md/examples/images/4.jpg)\n\n> Follow your heart.\n\n![](https://pandao.github.io/editor.md/examples/images/8.jpg)\n\n> 图为：厦门白城沙滩\n\n图片加链接 (Image + Link)：\n\n[![](https://pandao.github.io/editor.md/examples/images/7.jpg)](https://pandao.github.io/editor.md/images/7.jpg \"李健首张专辑《似水流年》封面\")\n\n> 图为：李健首张专辑《似水流年》封面\n\n----\n\n### 列表 Lists\n\n#### 无序列表（减号）Unordered Lists (-)\n\n- 列表一\n- 列表二\n- 列表三\n\n#### 无序列表（星号）Unordered Lists (*)\n\n* 列表一\n* 列表二\n* 列表三\n\n#### 无序列表（加号和嵌套）Unordered Lists (+)\n\n+ 列表一\n+ 列表二\n    + 列表二-1\n    + 列表二-2\n    + 列表二-3\n+ 列表三\n    * 列表一\n    * 列表二\n    * 列表三\n\n#### 有序列表 Ordered Lists (-)\n\n1. 第一行\n2. 第二行\n3. 第三行\n\n#### GFM task list\n\n- [x] GFM task list 1\n- [x] GFM task list 2\n- [ ] GFM task list 3\n    - [ ] GFM task list 3-1\n    - [ ] GFM task list 3-2\n    - [ ] GFM task list 3-3\n- [ ] GFM task list 4\n    - [ ] GFM task list 4-1\n    - [ ] GFM task list 4-2\n\n----\n\n### 绘制表格 Tables\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机      | $1600   |   5     |\n| 手机        |   $12   |   12   |\n| 管线        |    $1    |  234  |\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\n| Function name | Description                    |\n| ------------- | ------------------------------ |\n| `help()`      | Display the help window.       |\n| `destroy()`   | **Destroy your computer!**     |\n\n| Left-Aligned  | Center Aligned  | Right Aligned |\n| :------------ |:---------------:| -----:|\n| col 3 is      | some wordy text | $1600 |\n| col 2 is      | centered        |   $12 |\n| zebra stripes | are neat        |    $1 |\n\n| Item      | Value |\n| --------- | -----:|\n| Computer  | $1600 |\n| Phone     |   $12 |\n| Pipe      |    $1 |\n\n----\n\n#### 特殊符号 HTML Entities Codes\n\n&copy; &  &uml; &trade; &iexcl; &pound;\n&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot;\n\nX&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;\n\n18&ordm;C  &quot;  &apos;\n\n[========]\n\n### Emoji表情 :smiley:\n\n> Blockquotes :star:\n\n#### GFM task lists & Emoji & fontAwesome icon emoji & editormd logo emoji :editormd-logo-5x:\n\n- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <del>tags</del> supported :editormd-logo:;\n- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;\n- [x] [ ] :smiley: this is a complete item :smiley:;\n- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao;\n- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;\n    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;\n    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);\n\n#### 反斜杠 Escape\n\n\\*literal asterisks\\*\n\n[========]\n\n### 科学公式 TeX(KaTeX)\n\n$$E=mc^2$$\n\n行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。\n\n$$x > y$$\n\n$$\\(\\sqrt{3x-1}+(1+x)^2\\)$$\n\n$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$\n\n多行公式：\n\n```math\n\\displaystyle\n\\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2\n\\leq\n\\left( \\sum\\_{k=1}^n a\\_k^2 \\right)\n\\left( \\sum\\_{k=1}^n b\\_k^2 \\right)\n```\n\n```katex\n\\displaystyle\n    \\frac{1}{\n        \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\n        \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {\n        1+\\frac{e^{-6\\pi}}\n        {1+\\frac{e^{-8\\pi}}\n         {1+\\cdots} }\n        }\n    }\n```\n\n```latex\nf(x) = \\int_{-\\infty}^\\infty\n    \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\n    \\,d\\xi\n```\n\n### 分页符 Page break\n\n> Print Test: Ctrl + P\n\n[========]\n\n### 绘制流程图 Flowchart\n\n```flow\nst=>start: 用户登陆\nop=>operation: 登陆操作\ncond=>condition: 登陆成功 Yes or No?\ne=>end: 进入后台\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n[========]\n\n### 绘制序列图 Sequence Diagram\n\n```seq\nAndrew->China: Says Hello\nNote right of China: China thinks\\nabout it\nChina-->Andrew: How are you?\nAndrew->>China: I am good thanks!\n```\n\n### End\n","slug":"2016-10-13-MD-Example","published":1,"updated":"2016-10-21T02:35:21.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuje1krg0001d5u2dsgwyyeu","content":"<h1 id=\"Editor-md\"><a href=\"#Editor-md\" class=\"headerlink\" title=\"Editor.md\"></a>Editor.md</h1><p>md示例～</p>\n<a id=\"more\"></a>\n<p><img src=\"https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png\" alt=\"\"></p>\n<p><img src=\"https://img.shields.io/github/stars/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/forks/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/tag/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/release/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/issues/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/bower/v/editor.md.svg\" alt=\"\"></p>\n<p><strong>目录 (Table of Contents)</strong></p>\n<p>[TOCM]</p>\n<p>[TOC]</p>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><h1 id=\"Heading-1-link-Heading-link\"><a href=\"#Heading-1-link-Heading-link\" class=\"headerlink\" title=\"Heading 1 link Heading link\"></a>Heading 1 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h1><h2 id=\"Heading-2-link-Heading-link\"><a href=\"#Heading-2-link-Heading-link\" class=\"headerlink\" title=\"Heading 2 link Heading link\"></a>Heading 2 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h2><h3 id=\"Heading-3-link-Heading-link\"><a href=\"#Heading-3-link-Heading-link\" class=\"headerlink\" title=\"Heading 3 link Heading link\"></a>Heading 3 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h3><h4 id=\"Heading-4-link-Heading-link-Heading-link-Heading-link\"><a href=\"#Heading-4-link-Heading-link-Heading-link-Heading-link\" class=\"headerlink\" title=\"Heading 4 link Heading link Heading link Heading link\"></a>Heading 4 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a> Heading link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h4><h5 id=\"Heading-5-link-Heading-link\"><a href=\"#Heading-5-link-Heading-link\" class=\"headerlink\" title=\"Heading 5 link Heading link\"></a>Heading 5 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h5><h6 id=\"Heading-6-link-Heading-link\"><a href=\"#Heading-6-link-Heading-link\" class=\"headerlink\" title=\"Heading 6 link Heading link\"></a>Heading 6 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\" target=\"_blank\" rel=\"external\">Heading link</a></h6><h4 id=\"标题（用底线的形式）Heading-underline\"><a href=\"#标题（用底线的形式）Heading-underline\" class=\"headerlink\" title=\"标题（用底线的形式）Heading (underline)\"></a>标题（用底线的形式）Heading (underline)</h4><h1 id=\"This-is-an-H1\"><a href=\"#This-is-an-H1\" class=\"headerlink\" title=\"This is an H1\"></a>This is an H1</h1><h2 id=\"This-is-an-H2\"><a href=\"#This-is-an-H2\" class=\"headerlink\" title=\"This is an H2\"></a>This is an H2</h2><h3 id=\"字符效果和横线等\"><a href=\"#字符效果和横线等\" class=\"headerlink\" title=\"字符效果和横线等\"></a>字符效果和横线等</h3><hr>\n<p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p>\n<p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p>\n<p><strong>缩写(同HTML的abbr标签)</strong></p>\n<blockquote>\n<p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p>\n</blockquote>\n<p>The <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.</p>\n<h3 id=\"引用-Blockquotes\"><a href=\"#引用-Blockquotes\" class=\"headerlink\" title=\"引用 Blockquotes\"></a>引用 Blockquotes</h3><blockquote>\n<p>引用文本 Blockquotes</p>\n</blockquote>\n<p>引用的行内混合 Blockquotes</p>\n<blockquote>\n<p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href=\"http://localhost/\" target=\"_blank\" rel=\"external\">普通链接</a>。</p>\n</blockquote>\n<h3 id=\"锚点与链接-Links\"><a href=\"#锚点与链接-Links\" class=\"headerlink\" title=\"锚点与链接 Links\"></a>锚点与链接 Links</h3><p><a href=\"http://localhost/\" target=\"_blank\" rel=\"external\">普通链接</a></p>\n<p><a href=\"http://localhost/\" title=\"普通链接带标题\" target=\"_blank\" rel=\"external\">普通链接带标题</a></p>\n<p>直接链接：<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">https://github.com</a></p>\n<p><a href=\"http://www.this-anchor-link.com/\" target=\"_blank\" rel=\"external\">锚点链接</a></p>\n<p><a href=\"mailto:test.test@gmail.com\" target=\"_blank\" rel=\"external\">mailto:test.test@gmail.com</a></p>\n<p>GFM a-tail link @pandao  邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com</p>\n<blockquote>\n<p>@pandao</p>\n</blockquote>\n<h3 id=\"多语言代码高亮-Codes\"><a href=\"#多语言代码高亮-Codes\" class=\"headerlink\" title=\"多语言代码高亮 Codes\"></a>多语言代码高亮 Codes</h3><h4 id=\"行内代码-Inline-code\"><a href=\"#行内代码-Inline-code\" class=\"headerlink\" title=\"行内代码 Inline code\"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p>\n<h4 id=\"缩进风格\"><a href=\"#缩进风格\" class=\"headerlink\" title=\"缩进风格\"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似 <code>&lt;pre&gt;</code> 预格式化文本 ( Preformatted Text ) 的功能。</p>\n<pre><code>&lt;?php\n    echo &quot;Hello world!&quot;;\n?&gt;\n</code></pre><p>预格式化文本：</p>\n<pre><code>| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n</code></pre><h4 id=\"JS代码\"><a href=\"#JS代码\" class=\"headerlink\" title=\"JS代码　\"></a>JS代码　</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello world!\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> box = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> box.fn.init();</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    box.prototype = box.fn = &#123;</div><div class=\"line\">        <span class=\"attr\">init</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'box.init()'</span>);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"attr\">add</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"add\"</span>, str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t&#125;,</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"attr\">remove</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"remove\"</span>, str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    box.fn.init.prototype = box.fn;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">window</span>.box =box;</div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> testBox = box();</div><div class=\"line\">testBox.add(<span class=\"string\">\"jQuery\"</span>).remove(<span class=\"string\">\"jQuery\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"HTML-代码-HTML-codes\"><a href=\"#HTML-代码-HTML-codes\" class=\"headerlink\" title=\"HTML 代码 HTML codes\"></a>HTML 代码 HTML codes</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mate</span> <span class=\"attr\">charest</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Editor.md, Markdown, Editor\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello world!<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">            body&#123;font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;&#125;</div><div class=\"line\">            ul&#123;list-style: none;&#125;</div><div class=\"line\">            img&#123;border:none;vertical-align: middle;&#125;</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-xxl\"</span>&gt;</span>Hello world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-green\"</span>&gt;</span>Plain text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"图片-Images\"><a href=\"#图片-Images\" class=\"headerlink\" title=\"图片 Images\"></a>图片 Images</h3><p>Image:</p>\n<p><img src=\"https://pandao.github.io/editor.md/examples/images/4.jpg\" alt=\"\"></p>\n<blockquote>\n<p>Follow your heart.</p>\n</blockquote>\n<p><img src=\"https://pandao.github.io/editor.md/examples/images/8.jpg\" alt=\"\"></p>\n<blockquote>\n<p>图为：厦门白城沙滩</p>\n</blockquote>\n<p>图片加链接 (Image + Link)：</p>\n<p><a href=\"https://pandao.github.io/editor.md/images/7.jpg\" title=\"李健首张专辑《似水流年》封面\" target=\"_blank\" rel=\"external\"><img src=\"https://pandao.github.io/editor.md/examples/images/7.jpg\" alt=\"\"></a></p>\n<blockquote>\n<p>图为：李健首张专辑《似水流年》封面</p>\n</blockquote>\n<hr>\n<h3 id=\"列表-Lists\"><a href=\"#列表-Lists\" class=\"headerlink\" title=\"列表 Lists\"></a>列表 Lists</h3><h4 id=\"无序列表（减号）Unordered-Lists\"><a href=\"#无序列表（减号）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（减号）Unordered Lists (-)\"></a>无序列表（减号）Unordered Lists (-)</h4><ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n<h4 id=\"无序列表（星号）Unordered-Lists\"><a href=\"#无序列表（星号）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（星号）Unordered Lists (*)\"></a>无序列表（星号）Unordered Lists (*)</h4><ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n<h4 id=\"无序列表（加号和嵌套）Unordered-Lists\"><a href=\"#无序列表（加号和嵌套）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（加号和嵌套）Unordered Lists (+)\"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul>\n<li>列表一</li>\n<li>列表二<ul>\n<li>列表二-1</li>\n<li>列表二-2</li>\n<li>列表二-3</li>\n</ul>\n</li>\n<li>列表三<ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"有序列表-Ordered-Lists\"><a href=\"#有序列表-Ordered-Lists\" class=\"headerlink\" title=\"有序列表 Ordered Lists (-)\"></a>有序列表 Ordered Lists (-)</h4><ol>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ol>\n<h4 id=\"GFM-task-list\"><a href=\"#GFM-task-list\" class=\"headerlink\" title=\"GFM task list\"></a>GFM task list</h4><ul>\n<li>[x] GFM task list 1</li>\n<li>[x] GFM task list 2</li>\n<li>[ ] GFM task list 3<ul>\n<li>[ ] GFM task list 3-1</li>\n<li>[ ] GFM task list 3-2</li>\n<li>[ ] GFM task list 3-3</li>\n</ul>\n</li>\n<li>[ ] GFM task list 4<ul>\n<li>[ ] GFM task list 4-1</li>\n<li>[ ] GFM task list 4-2</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"绘制表格-Tables\"><a href=\"#绘制表格-Tables\" class=\"headerlink\" title=\"绘制表格 Tables\"></a>绘制表格 Tables</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Function name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>help()</code></td>\n<td>Display the help window.</td>\n</tr>\n<tr>\n<td><code>destroy()</code></td>\n<td><strong>Destroy your computer!</strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Left-Aligned</th>\n<th style=\"text-align:center\">Center Aligned</th>\n<th style=\"text-align:right\">Right Aligned</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">col 3 is</td>\n<td style=\"text-align:center\">some wordy text</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Item</th>\n<th style=\"text-align:right\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Computer</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>Phone</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>Pipe</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4 id=\"特殊符号-HTML-Entities-Codes\"><a href=\"#特殊符号-HTML-Entities-Codes\" class=\"headerlink\" title=\"特殊符号 HTML Entities Codes\"></a>特殊符号 HTML Entities Codes</h4><p>&copy; &amp;  &uml; &trade; &iexcl; &pound;<br>&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot;</p>\n<p>X&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;</p>\n<p>18&ordm;C  &quot;  &apos;</p>\n<p>[========]</p>\n<h3 id=\"Emoji表情-smiley\"><a href=\"#Emoji表情-smiley\" class=\"headerlink\" title=\"Emoji表情 :smiley:\"></a>Emoji表情 :smiley:</h3><blockquote>\n<p>Blockquotes :star:</p>\n</blockquote>\n<h4 id=\"GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x\"><a href=\"#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x\" class=\"headerlink\" title=\"GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:\"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul>\n<li>[x] :smiley: @mentions, :smiley: #refs, <a href=\"\">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li>\n<li>[x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li>\n<li>[x] [ ] :smiley: this is a complete item :smiley:;</li>\n<li>[ ] []this is an incomplete item <a href=\"#\">test link</a> :fa-star: @pandao;</li>\n<li>[ ] [ ]this is an incomplete item :fa-star: :fa-gear:;<ul>\n<li>[ ] :smiley: this is an incomplete item <a href=\"#\">test link</a> :fa-star: :fa-gear:;</li>\n<li>[ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href=\"#\">test link</a>;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反斜杠-Escape\"><a href=\"#反斜杠-Escape\" class=\"headerlink\" title=\"反斜杠 Escape\"></a>反斜杠 Escape</h4><p>*literal asterisks*</p>\n<p>[========]</p>\n<h3 id=\"科学公式-TeX-KaTeX\"><a href=\"#科学公式-TeX-KaTeX\" class=\"headerlink\" title=\"科学公式 TeX(KaTeX)\"></a>科学公式 TeX(KaTeX)</h3><p>$$E=mc^2$$</p>\n<p>行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</p>\n<p>$$x &gt; y$$</p>\n<p>$$(\\sqrt{3x-1}+(1+x)^2)$$</p>\n<p>$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$</p>\n<p>多行公式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\displaystyle</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n a\\_k b\\_k \\right)^2</div><div class=\"line\">\\leq</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n a\\_k^2 \\right)</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n b\\_k^2 \\right)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\displaystyle</div><div class=\"line\">    \\frac&#123;1&#125;&#123;</div><div class=\"line\">        \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123;</div><div class=\"line\">        \\frac25 \\pi&#125;&#125; = 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123;</div><div class=\"line\">        1+\\frac&#123;e^&#123;-6\\pi&#125;&#125;</div><div class=\"line\">        &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125;</div><div class=\"line\">         &#123;1+\\cdots&#125; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">f(x) = \\int_&#123;-\\infty&#125;^\\infty</div><div class=\"line\">    \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125;</div><div class=\"line\">    \\,d\\xi</div></pre></td></tr></table></figure>\n<h3 id=\"分页符-Page-break\"><a href=\"#分页符-Page-break\" class=\"headerlink\" title=\"分页符 Page break\"></a>分页符 Page break</h3><blockquote>\n<p>Print Test: Ctrl + P</p>\n</blockquote>\n<p>[========]</p>\n<h3 id=\"绘制流程图-Flowchart\"><a href=\"#绘制流程图-Flowchart\" class=\"headerlink\" title=\"绘制流程图 Flowchart\"></a>绘制流程图 Flowchart</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: 用户登陆</div><div class=\"line\">op=&gt;operation: 登陆操作</div><div class=\"line\">cond=&gt;condition: 登陆成功 Yes or No?</div><div class=\"line\">e=&gt;end: 进入后台</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>\n<p>[========]</p>\n<h3 id=\"绘制序列图-Sequence-Diagram\"><a href=\"#绘制序列图-Sequence-Diagram\" class=\"headerlink\" title=\"绘制序列图 Sequence Diagram\"></a>绘制序列图 Sequence Diagram</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Andrew-&gt;China: Says Hello</div><div class=\"line\">Note right of China: China thinks\\nabout it</div><div class=\"line\">China--&gt;Andrew: How are you?</div><div class=\"line\">Andrew-&gt;&gt;China: I am good thanks!</div></pre></td></tr></table></figure>\n<h3 id=\"End\"><a href=\"#End\" class=\"headerlink\" title=\"End\"></a>End</h3>","excerpt":"<h1 id=\"Editor-md\"><a href=\"#Editor-md\" class=\"headerlink\" title=\"Editor.md\"></a>Editor.md</h1><p>md示例～</p>","more":"<p><img src=\"https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png\" alt=\"\"></p>\n<p><img src=\"https://img.shields.io/github/stars/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/forks/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/tag/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/release/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/github/issues/pandao/editor.md.svg\" alt=\"\"> <img src=\"https://img.shields.io/bower/v/editor.md.svg\" alt=\"\"></p>\n<p><strong>目录 (Table of Contents)</strong></p>\n<p>[TOCM]</p>\n<p>[TOC]</p>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><h1 id=\"Heading-1-link-Heading-link\"><a href=\"#Heading-1-link-Heading-link\" class=\"headerlink\" title=\"Heading 1 link Heading link\"></a>Heading 1 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h1><h2 id=\"Heading-2-link-Heading-link\"><a href=\"#Heading-2-link-Heading-link\" class=\"headerlink\" title=\"Heading 2 link Heading link\"></a>Heading 2 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h2><h3 id=\"Heading-3-link-Heading-link\"><a href=\"#Heading-3-link-Heading-link\" class=\"headerlink\" title=\"Heading 3 link Heading link\"></a>Heading 3 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h3><h4 id=\"Heading-4-link-Heading-link-Heading-link-Heading-link\"><a href=\"#Heading-4-link-Heading-link-Heading-link-Heading-link\" class=\"headerlink\" title=\"Heading 4 link Heading link Heading link Heading link\"></a>Heading 4 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a> Heading link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h4><h5 id=\"Heading-5-link-Heading-link\"><a href=\"#Heading-5-link-Heading-link\" class=\"headerlink\" title=\"Heading 5 link Heading link\"></a>Heading 5 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h5><h6 id=\"Heading-6-link-Heading-link\"><a href=\"#Heading-6-link-Heading-link\" class=\"headerlink\" title=\"Heading 6 link Heading link\"></a>Heading 6 link <a href=\"https://github.com/pandao/editor.md\" title=\"Heading link\">Heading link</a></h6><h4 id=\"标题（用底线的形式）Heading-underline\"><a href=\"#标题（用底线的形式）Heading-underline\" class=\"headerlink\" title=\"标题（用底线的形式）Heading (underline)\"></a>标题（用底线的形式）Heading (underline)</h4><h1 id=\"This-is-an-H1\"><a href=\"#This-is-an-H1\" class=\"headerlink\" title=\"This is an H1\"></a>This is an H1</h1><h2 id=\"This-is-an-H2\"><a href=\"#This-is-an-H2\" class=\"headerlink\" title=\"This is an H2\"></a>This is an H2</h2><h3 id=\"字符效果和横线等\"><a href=\"#字符效果和横线等\" class=\"headerlink\" title=\"字符效果和横线等\"></a>字符效果和横线等</h3><hr>\n<p><del>删除线</del> <s>删除线（开启识别HTML标签时）</s><br><em>斜体字</em>      <em>斜体字</em><br><strong>粗体</strong>  <strong>粗体</strong><br><strong><em>粗斜体</em></strong> <strong><em>粗斜体</em></strong></p>\n<p>上标：X<sub>2</sub>，下标：O<sup>2</sup></p>\n<p><strong>缩写(同HTML的abbr标签)</strong></p>\n<blockquote>\n<p>即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</p>\n</blockquote>\n<p>The <abbr title=\"Hyper Text Markup Language\">HTML</abbr> specification is maintained by the <abbr title=\"World Wide Web Consortium\">W3C</abbr>.</p>\n<h3 id=\"引用-Blockquotes\"><a href=\"#引用-Blockquotes\" class=\"headerlink\" title=\"引用 Blockquotes\"></a>引用 Blockquotes</h3><blockquote>\n<p>引用文本 Blockquotes</p>\n</blockquote>\n<p>引用的行内混合 Blockquotes</p>\n<blockquote>\n<p>引用：如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href=\"http://localhost/\">普通链接</a>。</p>\n</blockquote>\n<h3 id=\"锚点与链接-Links\"><a href=\"#锚点与链接-Links\" class=\"headerlink\" title=\"锚点与链接 Links\"></a>锚点与链接 Links</h3><p><a href=\"http://localhost/\">普通链接</a></p>\n<p><a href=\"http://localhost/\" title=\"普通链接带标题\">普通链接带标题</a></p>\n<p>直接链接：<a href=\"https://github.com\">https://github.com</a></p>\n<p><a href=\"http://www.this-anchor-link.com/\">锚点链接</a></p>\n<p><a href=\"mailto:test.test@gmail.com\">mailto:test.test@gmail.com</a></p>\n<p>GFM a-tail link @pandao  邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com</p>\n<blockquote>\n<p>@pandao</p>\n</blockquote>\n<h3 id=\"多语言代码高亮-Codes\"><a href=\"#多语言代码高亮-Codes\" class=\"headerlink\" title=\"多语言代码高亮 Codes\"></a>多语言代码高亮 Codes</h3><h4 id=\"行内代码-Inline-code\"><a href=\"#行内代码-Inline-code\" class=\"headerlink\" title=\"行内代码 Inline code\"></a>行内代码 Inline code</h4><p>执行命令：<code>npm install marked</code></p>\n<h4 id=\"缩进风格\"><a href=\"#缩进风格\" class=\"headerlink\" title=\"缩进风格\"></a>缩进风格</h4><p>即缩进四个空格，也做为实现类似 <code>&lt;pre&gt;</code> 预格式化文本 ( Preformatted Text ) 的功能。</p>\n<pre><code>&lt;?php\n    echo &quot;Hello world!&quot;;\n?&gt;\n</code></pre><p>预格式化文本：</p>\n<pre><code>| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n</code></pre><h4 id=\"JS代码\"><a href=\"#JS代码\" class=\"headerlink\" title=\"JS代码　\"></a>JS代码　</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"Hello world!\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> box = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> box.fn.init();</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    box.prototype = box.fn = &#123;</div><div class=\"line\">        <span class=\"attr\">init</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'box.init()'</span>);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">        &#125;,</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"attr\">add</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"add\"</span>, str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t&#125;,</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"attr\">remove</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">\t\t\talert(<span class=\"string\">\"remove\"</span>, str);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    box.fn.init.prototype = box.fn;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">window</span>.box =box;</div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> testBox = box();</div><div class=\"line\">testBox.add(<span class=\"string\">\"jQuery\"</span>).remove(<span class=\"string\">\"jQuery\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"HTML-代码-HTML-codes\"><a href=\"#HTML-代码-HTML-codes\" class=\"headerlink\" title=\"HTML 代码 HTML codes\"></a>HTML 代码 HTML codes</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mate</span> <span class=\"attr\">charest</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Editor.md, Markdown, Editor\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello world!<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">            body&#123;font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;&#125;</div><div class=\"line\">            ul&#123;list-style: none;&#125;</div><div class=\"line\">            img&#123;border:none;vertical-align: middle;&#125;</div><div class=\"line\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-xxl\"</span>&gt;</span>Hello world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-green\"</span>&gt;</span>Plain text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"图片-Images\"><a href=\"#图片-Images\" class=\"headerlink\" title=\"图片 Images\"></a>图片 Images</h3><p>Image:</p>\n<p><img src=\"https://pandao.github.io/editor.md/examples/images/4.jpg\" alt=\"\"></p>\n<blockquote>\n<p>Follow your heart.</p>\n</blockquote>\n<p><img src=\"https://pandao.github.io/editor.md/examples/images/8.jpg\" alt=\"\"></p>\n<blockquote>\n<p>图为：厦门白城沙滩</p>\n</blockquote>\n<p>图片加链接 (Image + Link)：</p>\n<p><a href=\"https://pandao.github.io/editor.md/images/7.jpg\" title=\"李健首张专辑《似水流年》封面\"><img src=\"https://pandao.github.io/editor.md/examples/images/7.jpg\" alt=\"\"></a></p>\n<blockquote>\n<p>图为：李健首张专辑《似水流年》封面</p>\n</blockquote>\n<hr>\n<h3 id=\"列表-Lists\"><a href=\"#列表-Lists\" class=\"headerlink\" title=\"列表 Lists\"></a>列表 Lists</h3><h4 id=\"无序列表（减号）Unordered-Lists\"><a href=\"#无序列表（减号）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（减号）Unordered Lists (-)\"></a>无序列表（减号）Unordered Lists (-)</h4><ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n<h4 id=\"无序列表（星号）Unordered-Lists\"><a href=\"#无序列表（星号）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（星号）Unordered Lists (*)\"></a>无序列表（星号）Unordered Lists (*)</h4><ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n<h4 id=\"无序列表（加号和嵌套）Unordered-Lists\"><a href=\"#无序列表（加号和嵌套）Unordered-Lists\" class=\"headerlink\" title=\"无序列表（加号和嵌套）Unordered Lists (+)\"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><ul>\n<li>列表一</li>\n<li>列表二<ul>\n<li>列表二-1</li>\n<li>列表二-2</li>\n<li>列表二-3</li>\n</ul>\n</li>\n<li>列表三<ul>\n<li>列表一</li>\n<li>列表二</li>\n<li>列表三</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"有序列表-Ordered-Lists\"><a href=\"#有序列表-Ordered-Lists\" class=\"headerlink\" title=\"有序列表 Ordered Lists (-)\"></a>有序列表 Ordered Lists (-)</h4><ol>\n<li>第一行</li>\n<li>第二行</li>\n<li>第三行</li>\n</ol>\n<h4 id=\"GFM-task-list\"><a href=\"#GFM-task-list\" class=\"headerlink\" title=\"GFM task list\"></a>GFM task list</h4><ul>\n<li>[x] GFM task list 1</li>\n<li>[x] GFM task list 2</li>\n<li>[ ] GFM task list 3<ul>\n<li>[ ] GFM task list 3-1</li>\n<li>[ ] GFM task list 3-2</li>\n<li>[ ] GFM task list 3-3</li>\n</ul>\n</li>\n<li>[ ] GFM task list 4<ul>\n<li>[ ] GFM task list 4-1</li>\n<li>[ ] GFM task list 4-2</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"绘制表格-Tables\"><a href=\"#绘制表格-Tables\" class=\"headerlink\" title=\"绘制表格 Tables\"></a>绘制表格 Tables</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>Second Header</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n<tr>\n<td>Content Cell</td>\n<td>Content Cell</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Function name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>help()</code></td>\n<td>Display the help window.</td>\n</tr>\n<tr>\n<td><code>destroy()</code></td>\n<td><strong>Destroy your computer!</strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Left-Aligned</th>\n<th style=\"text-align:center\">Center Aligned</th>\n<th style=\"text-align:right\">Right Aligned</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">col 3 is</td>\n<td style=\"text-align:center\">some wordy text</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Item</th>\n<th style=\"text-align:right\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Computer</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>Phone</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>Pipe</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4 id=\"特殊符号-HTML-Entities-Codes\"><a href=\"#特殊符号-HTML-Entities-Codes\" class=\"headerlink\" title=\"特殊符号 HTML Entities Codes\"></a>特殊符号 HTML Entities Codes</h4><p>&copy; &amp;  &uml; &trade; &iexcl; &pound;<br>&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot;</p>\n<p>X&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;</p>\n<p>18&ordm;C  &quot;  &apos;</p>\n<p>[========]</p>\n<h3 id=\"Emoji表情-smiley\"><a href=\"#Emoji表情-smiley\" class=\"headerlink\" title=\"Emoji表情 :smiley:\"></a>Emoji表情 :smiley:</h3><blockquote>\n<p>Blockquotes :star:</p>\n</blockquote>\n<h4 id=\"GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x\"><a href=\"#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x\" class=\"headerlink\" title=\"GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:\"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><ul>\n<li>[x] :smiley: @mentions, :smiley: #refs, <a href=\"\">links</a>, <strong>formatting</strong>, and <del>tags</del> supported :editormd-logo:;</li>\n<li>[x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</li>\n<li>[x] [ ] :smiley: this is a complete item :smiley:;</li>\n<li>[ ] []this is an incomplete item <a href=\"#\">test link</a> :fa-star: @pandao;</li>\n<li>[ ] [ ]this is an incomplete item :fa-star: :fa-gear:;<ul>\n<li>[ ] :smiley: this is an incomplete item <a href=\"#\">test link</a> :fa-star: :fa-gear:;</li>\n<li>[ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item <a href=\"#\">test link</a>;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"反斜杠-Escape\"><a href=\"#反斜杠-Escape\" class=\"headerlink\" title=\"反斜杠 Escape\"></a>反斜杠 Escape</h4><p>*literal asterisks*</p>\n<p>[========]</p>\n<h3 id=\"科学公式-TeX-KaTeX\"><a href=\"#科学公式-TeX-KaTeX\" class=\"headerlink\" title=\"科学公式 TeX(KaTeX)\"></a>科学公式 TeX(KaTeX)</h3><p>$$E=mc^2$$</p>\n<p>行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</p>\n<p>$$x &gt; y$$</p>\n<p>$$(\\sqrt{3x-1}+(1+x)^2)$$</p>\n<p>$$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$</p>\n<p>多行公式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\displaystyle</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n a\\_k b\\_k \\right)^2</div><div class=\"line\">\\leq</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n a\\_k^2 \\right)</div><div class=\"line\">\\left( \\sum\\_&#123;k=1&#125;^n b\\_k^2 \\right)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\displaystyle</div><div class=\"line\">    \\frac&#123;1&#125;&#123;</div><div class=\"line\">        \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123;</div><div class=\"line\">        \\frac25 \\pi&#125;&#125; = 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123;</div><div class=\"line\">        1+\\frac&#123;e^&#123;-6\\pi&#125;&#125;</div><div class=\"line\">        &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125;</div><div class=\"line\">         &#123;1+\\cdots&#125; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">f(x) = \\int_&#123;-\\infty&#125;^\\infty</div><div class=\"line\">    \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125;</div><div class=\"line\">    \\,d\\xi</div></pre></td></tr></table></figure>\n<h3 id=\"分页符-Page-break\"><a href=\"#分页符-Page-break\" class=\"headerlink\" title=\"分页符 Page break\"></a>分页符 Page break</h3><blockquote>\n<p>Print Test: Ctrl + P</p>\n</blockquote>\n<p>[========]</p>\n<h3 id=\"绘制流程图-Flowchart\"><a href=\"#绘制流程图-Flowchart\" class=\"headerlink\" title=\"绘制流程图 Flowchart\"></a>绘制流程图 Flowchart</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: 用户登陆</div><div class=\"line\">op=&gt;operation: 登陆操作</div><div class=\"line\">cond=&gt;condition: 登陆成功 Yes or No?</div><div class=\"line\">e=&gt;end: 进入后台</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>\n<p>[========]</p>\n<h3 id=\"绘制序列图-Sequence-Diagram\"><a href=\"#绘制序列图-Sequence-Diagram\" class=\"headerlink\" title=\"绘制序列图 Sequence Diagram\"></a>绘制序列图 Sequence Diagram</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Andrew-&gt;China: Says Hello</div><div class=\"line\">Note right of China: China thinks\\nabout it</div><div class=\"line\">China--&gt;Andrew: How are you?</div><div class=\"line\">Andrew-&gt;&gt;China: I am good thanks!</div></pre></td></tr></table></figure>\n<h3 id=\"End\"><a href=\"#End\" class=\"headerlink\" title=\"End\"></a>End</h3>"},{"layout":"post","title":"node 安装","date":"2016-07-12T00:55:00.000Z","comments":1,"_content":"\n\n### 卸载node\n>$  nvm uninstall --lts\n>$  sudo apt-get remove nodejs\n>$  apt-get autoremove nodejs\n\n<!-- more -->\n\n### 删除node\n>$  sudo find ~/ -name <查找的文件名字>\n### 删除npm\n\n### 安装nvm\n>$  curl -o- https:###raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash\n\n### 将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中\n```\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n### 应用源文件\n>$  source 　/.bashrc, ~/.profile, or ~/.zshrc\n\n### 验证安装是否成功\n>$  command -v nvm\n\n### 查看所有的node版本\n>$  nvm ls-remote\n\n### 安装node版本\n>$  nvm install --lts　　\n\n### 查看安装是否成功\n>$  node -v\n>$  npm -v\n\n### 安装hexo\n>$  npm install -g hexo-cli\n\n### 初始化博客信息\n>$  hexo init <folder>\n>$  cd <folder>\n\n### 安装博客需要的插件\n>$  npm install\n\n### 生成静态页面\n>$ hexo generate（hexo g也可以）\n\n### 本地启动\n>$  hexo server\n>Hexo is running at http://localhost:4000/. Press `Ctrl+C` to stop.\n\n### 建立Repository\n>gedit  _config.yml\n\n```\ndeploy:\n     type: git\n     repo: git@github.com:myoneray/myoneray.github.com.git\n     branch: master\n```\n### 然后执行命令：\n> npm install hexo-deployer-git --save\n\n### 设置当前node版本\n>nvm use --delete-prefix v6.0.0\n\n### 设置当前默认的node版本\nnvm alias default v6.0.0\n\n### 获取npm 安装的路径\nnpm config get prefix\n\n### 查看当前PATH\necho  $PATH\n\n### 安装tree\nsudo apt-get install tree\n\n### 显示所有的npm　默认配置\nnpm config ls -l\n\n### 显示npm配置\nnpm config list\n\n### npm找不到\nn=$(which node);n=${n%/bin/node}; chmod -R 755 $n/bin/*; sudo cp -r $n/{bin,lib,share} /usr/local\n","source":"_posts/2016-10-17-node安装.md","raw":"---\nlayout: post\ntitle:  node 安装\ndate: 2016-07-12 08:55\ncomments: true\ntags:\n- 前段\n- node\n- nvm\n- npm\n---\n\n\n### 卸载node\n>$  nvm uninstall --lts\n>$  sudo apt-get remove nodejs\n>$  apt-get autoremove nodejs\n\n<!-- more -->\n\n### 删除node\n>$  sudo find ~/ -name <查找的文件名字>\n### 删除npm\n\n### 安装nvm\n>$  curl -o- https:###raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash\n\n### 将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中\n```\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n### 应用源文件\n>$  source 　/.bashrc, ~/.profile, or ~/.zshrc\n\n### 验证安装是否成功\n>$  command -v nvm\n\n### 查看所有的node版本\n>$  nvm ls-remote\n\n### 安装node版本\n>$  nvm install --lts　　\n\n### 查看安装是否成功\n>$  node -v\n>$  npm -v\n\n### 安装hexo\n>$  npm install -g hexo-cli\n\n### 初始化博客信息\n>$  hexo init <folder>\n>$  cd <folder>\n\n### 安装博客需要的插件\n>$  npm install\n\n### 生成静态页面\n>$ hexo generate（hexo g也可以）\n\n### 本地启动\n>$  hexo server\n>Hexo is running at http://localhost:4000/. Press `Ctrl+C` to stop.\n\n### 建立Repository\n>gedit  _config.yml\n\n```\ndeploy:\n     type: git\n     repo: git@github.com:myoneray/myoneray.github.com.git\n     branch: master\n```\n### 然后执行命令：\n> npm install hexo-deployer-git --save\n\n### 设置当前node版本\n>nvm use --delete-prefix v6.0.0\n\n### 设置当前默认的node版本\nnvm alias default v6.0.0\n\n### 获取npm 安装的路径\nnpm config get prefix\n\n### 查看当前PATH\necho  $PATH\n\n### 安装tree\nsudo apt-get install tree\n\n### 显示所有的npm　默认配置\nnpm config ls -l\n\n### 显示npm配置\nnpm config list\n\n### npm找不到\nn=$(which node);n=${n%/bin/node}; chmod -R 755 $n/bin/*; sudo cp -r $n/{bin,lib,share} /usr/local\n","slug":"2016-10-17-node安装","published":1,"updated":"2016-10-21T02:34:59.162Z","photos":[],"link":"","_id":"ciuje1krn0003d5u2zk5ndx1c","content":"<h3 id=\"卸载node\"><a href=\"#卸载node\" class=\"headerlink\" title=\"卸载node\"></a>卸载node</h3><blockquote>\n<p>$  nvm uninstall –lts<br>$  sudo apt-get remove nodejs<br>$  apt-get autoremove nodejs</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"删除node\"><a href=\"#删除node\" class=\"headerlink\" title=\"删除node\"></a>删除node</h3><blockquote>\n<p>$  sudo find ~/ -name &lt;查找的文件名字&gt;</p>\n<h3 id=\"删除npm\"><a href=\"#删除npm\" class=\"headerlink\" title=\"删除npm\"></a>删除npm</h3></blockquote>\n<h3 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h3><blockquote>\n<p>$  curl -o- https:###raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash</p>\n</blockquote>\n<h3 id=\"将这些信息复制到-bashrc-profile-or-zshrc中\"><a href=\"#将这些信息复制到-bashrc-profile-or-zshrc中\" class=\"headerlink\" title=\"将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中\"></a>将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> <span class=\"comment\"># This loads nvm</span></div></pre></td></tr></table></figure>\n<h3 id=\"应用源文件\"><a href=\"#应用源文件\" class=\"headerlink\" title=\"应用源文件\"></a>应用源文件</h3><blockquote>\n<p>$  source 　/.bashrc, ~/.profile, or ~/.zshrc</p>\n</blockquote>\n<h3 id=\"验证安装是否成功\"><a href=\"#验证安装是否成功\" class=\"headerlink\" title=\"验证安装是否成功\"></a>验证安装是否成功</h3><blockquote>\n<p>$  command -v nvm</p>\n</blockquote>\n<h3 id=\"查看所有的node版本\"><a href=\"#查看所有的node版本\" class=\"headerlink\" title=\"查看所有的node版本\"></a>查看所有的node版本</h3><blockquote>\n<p>$  nvm ls-remote</p>\n</blockquote>\n<h3 id=\"安装node版本\"><a href=\"#安装node版本\" class=\"headerlink\" title=\"安装node版本\"></a>安装node版本</h3><blockquote>\n<p>$  nvm install –lts　　</p>\n</blockquote>\n<h3 id=\"查看安装是否成功\"><a href=\"#查看安装是否成功\" class=\"headerlink\" title=\"查看安装是否成功\"></a>查看安装是否成功</h3><blockquote>\n<p>$  node -v<br>$  npm -v</p>\n</blockquote>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><blockquote>\n<p>$  npm install -g hexo-cli</p>\n</blockquote>\n<h3 id=\"初始化博客信息\"><a href=\"#初始化博客信息\" class=\"headerlink\" title=\"初始化博客信息\"></a>初始化博客信息</h3><blockquote>\n<p>$  hexo init <folder><br>$  cd <folder></folder></folder></p>\n</blockquote>\n<h3 id=\"安装博客需要的插件\"><a href=\"#安装博客需要的插件\" class=\"headerlink\" title=\"安装博客需要的插件\"></a>安装博客需要的插件</h3><blockquote>\n<p>$  npm install</p>\n</blockquote>\n<h3 id=\"生成静态页面\"><a href=\"#生成静态页面\" class=\"headerlink\" title=\"生成静态页面\"></a>生成静态页面</h3><blockquote>\n<p>$ hexo generate（hexo g也可以）</p>\n</blockquote>\n<h3 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h3><blockquote>\n<p>$  hexo server<br>Hexo is running at <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>. Press <code>Ctrl+C</code> to stop.</p>\n</blockquote>\n<h3 id=\"建立Repository\"><a href=\"#建立Repository\" class=\"headerlink\" title=\"建立Repository\"></a>建立Repository</h3><blockquote>\n<p>gedit  _config.yml</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">deploy</span>:</div><div class=\"line\">     <span class=\"attribute\">type</span>: git</div><div class=\"line\">     <span class=\"attribute\">repo</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:myoneray/myoneray.github.com.git</div><div class=\"line\">     <span class=\"attribute\">branch</span>: master</div></pre></td></tr></table></figure>\n<h3 id=\"然后执行命令：\"><a href=\"#然后执行命令：\" class=\"headerlink\" title=\"然后执行命令：\"></a>然后执行命令：</h3><blockquote>\n<p>npm install hexo-deployer-git –save</p>\n</blockquote>\n<h3 id=\"设置当前node版本\"><a href=\"#设置当前node版本\" class=\"headerlink\" title=\"设置当前node版本\"></a>设置当前node版本</h3><blockquote>\n<p>nvm use –delete-prefix v6.0.0</p>\n</blockquote>\n<h3 id=\"设置当前默认的node版本\"><a href=\"#设置当前默认的node版本\" class=\"headerlink\" title=\"设置当前默认的node版本\"></a>设置当前默认的node版本</h3><p>nvm alias default v6.0.0</p>\n<h3 id=\"获取npm-安装的路径\"><a href=\"#获取npm-安装的路径\" class=\"headerlink\" title=\"获取npm 安装的路径\"></a>获取npm 安装的路径</h3><p>npm config get prefix</p>\n<h3 id=\"查看当前PATH\"><a href=\"#查看当前PATH\" class=\"headerlink\" title=\"查看当前PATH\"></a>查看当前PATH</h3><p>echo  $PATH</p>\n<h3 id=\"安装tree\"><a href=\"#安装tree\" class=\"headerlink\" title=\"安装tree\"></a>安装tree</h3><p>sudo apt-get install tree</p>\n<h3 id=\"显示所有的npm-默认配置\"><a href=\"#显示所有的npm-默认配置\" class=\"headerlink\" title=\"显示所有的npm　默认配置\"></a>显示所有的npm　默认配置</h3><p>npm config ls -l</p>\n<h3 id=\"显示npm配置\"><a href=\"#显示npm配置\" class=\"headerlink\" title=\"显示npm配置\"></a>显示npm配置</h3><p>npm config list</p>\n<h3 id=\"npm找不到\"><a href=\"#npm找不到\" class=\"headerlink\" title=\"npm找不到\"></a>npm找不到</h3><p>n=$(which node);n=${n%/bin/node}; chmod -R 755 $n/bin/*; sudo cp -r $n/{bin,lib,share} /usr/local</p>\n","excerpt":"<h3 id=\"卸载node\"><a href=\"#卸载node\" class=\"headerlink\" title=\"卸载node\"></a>卸载node</h3><blockquote>\n<p>$  nvm uninstall –lts<br>$  sudo apt-get remove nodejs<br>$  apt-get autoremove nodejs</p>\n</blockquote>","more":"<h3 id=\"删除node\"><a href=\"#删除node\" class=\"headerlink\" title=\"删除node\"></a>删除node</h3><blockquote>\n<p>$  sudo find ~/ -name &lt;查找的文件名字&gt;</p>\n<h3 id=\"删除npm\"><a href=\"#删除npm\" class=\"headerlink\" title=\"删除npm\"></a>删除npm</h3></blockquote>\n<h3 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h3><blockquote>\n<p>$  curl -o- https:###raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash</p>\n</blockquote>\n<h3 id=\"将这些信息复制到-bashrc-profile-or-zshrc中\"><a href=\"#将这些信息复制到-bashrc-profile-or-zshrc中\" class=\"headerlink\" title=\"将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中\"></a>将这些信息复制到~/.bashrc, ~/.profile, or ~/.zshrc中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ <span class=\"_\">-s</span> <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; . <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> <span class=\"comment\"># This loads nvm</span></div></pre></td></tr></table></figure>\n<h3 id=\"应用源文件\"><a href=\"#应用源文件\" class=\"headerlink\" title=\"应用源文件\"></a>应用源文件</h3><blockquote>\n<p>$  source 　/.bashrc, ~/.profile, or ~/.zshrc</p>\n</blockquote>\n<h3 id=\"验证安装是否成功\"><a href=\"#验证安装是否成功\" class=\"headerlink\" title=\"验证安装是否成功\"></a>验证安装是否成功</h3><blockquote>\n<p>$  command -v nvm</p>\n</blockquote>\n<h3 id=\"查看所有的node版本\"><a href=\"#查看所有的node版本\" class=\"headerlink\" title=\"查看所有的node版本\"></a>查看所有的node版本</h3><blockquote>\n<p>$  nvm ls-remote</p>\n</blockquote>\n<h3 id=\"安装node版本\"><a href=\"#安装node版本\" class=\"headerlink\" title=\"安装node版本\"></a>安装node版本</h3><blockquote>\n<p>$  nvm install –lts　　</p>\n</blockquote>\n<h3 id=\"查看安装是否成功\"><a href=\"#查看安装是否成功\" class=\"headerlink\" title=\"查看安装是否成功\"></a>查看安装是否成功</h3><blockquote>\n<p>$  node -v<br>$  npm -v</p>\n</blockquote>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><blockquote>\n<p>$  npm install -g hexo-cli</p>\n</blockquote>\n<h3 id=\"初始化博客信息\"><a href=\"#初始化博客信息\" class=\"headerlink\" title=\"初始化博客信息\"></a>初始化博客信息</h3><blockquote>\n<p>$  hexo init <folder><br>$  cd <folder></p>\n</blockquote>\n<h3 id=\"安装博客需要的插件\"><a href=\"#安装博客需要的插件\" class=\"headerlink\" title=\"安装博客需要的插件\"></a>安装博客需要的插件</h3><blockquote>\n<p>$  npm install</p>\n</blockquote>\n<h3 id=\"生成静态页面\"><a href=\"#生成静态页面\" class=\"headerlink\" title=\"生成静态页面\"></a>生成静态页面</h3><blockquote>\n<p>$ hexo generate（hexo g也可以）</p>\n</blockquote>\n<h3 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h3><blockquote>\n<p>$  hexo server<br>Hexo is running at <a href=\"http://localhost:4000/\">http://localhost:4000/</a>. Press <code>Ctrl+C</code> to stop.</p>\n</blockquote>\n<h3 id=\"建立Repository\"><a href=\"#建立Repository\" class=\"headerlink\" title=\"建立Repository\"></a>建立Repository</h3><blockquote>\n<p>gedit  _config.yml</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">deploy</span>:</div><div class=\"line\">     <span class=\"attribute\">type</span>: git</div><div class=\"line\">     <span class=\"attribute\">repo</span>: git<span class=\"variable\">@github</span>.<span class=\"attribute\">com</span>:myoneray/myoneray.github.com.git</div><div class=\"line\">     <span class=\"attribute\">branch</span>: master</div></pre></td></tr></table></figure>\n<h3 id=\"然后执行命令：\"><a href=\"#然后执行命令：\" class=\"headerlink\" title=\"然后执行命令：\"></a>然后执行命令：</h3><blockquote>\n<p>npm install hexo-deployer-git –save</p>\n</blockquote>\n<h3 id=\"设置当前node版本\"><a href=\"#设置当前node版本\" class=\"headerlink\" title=\"设置当前node版本\"></a>设置当前node版本</h3><blockquote>\n<p>nvm use –delete-prefix v6.0.0</p>\n</blockquote>\n<h3 id=\"设置当前默认的node版本\"><a href=\"#设置当前默认的node版本\" class=\"headerlink\" title=\"设置当前默认的node版本\"></a>设置当前默认的node版本</h3><p>nvm alias default v6.0.0</p>\n<h3 id=\"获取npm-安装的路径\"><a href=\"#获取npm-安装的路径\" class=\"headerlink\" title=\"获取npm 安装的路径\"></a>获取npm 安装的路径</h3><p>npm config get prefix</p>\n<h3 id=\"查看当前PATH\"><a href=\"#查看当前PATH\" class=\"headerlink\" title=\"查看当前PATH\"></a>查看当前PATH</h3><p>echo  $PATH</p>\n<h3 id=\"安装tree\"><a href=\"#安装tree\" class=\"headerlink\" title=\"安装tree\"></a>安装tree</h3><p>sudo apt-get install tree</p>\n<h3 id=\"显示所有的npm-默认配置\"><a href=\"#显示所有的npm-默认配置\" class=\"headerlink\" title=\"显示所有的npm　默认配置\"></a>显示所有的npm　默认配置</h3><p>npm config ls -l</p>\n<h3 id=\"显示npm配置\"><a href=\"#显示npm配置\" class=\"headerlink\" title=\"显示npm配置\"></a>显示npm配置</h3><p>npm config list</p>\n<h3 id=\"npm找不到\"><a href=\"#npm找不到\" class=\"headerlink\" title=\"npm找不到\"></a>npm找不到</h3><p>n=$(which node);n=${n%/bin/node}; chmod -R 755 $n/bin/*; sudo cp -r $n/{bin,lib,share} /usr/local</p>"},{"layout":"post","title":"博客主题修改部署问题","date":"2016-10-12T00:55:00.000Z","comments":1,"_content":"\n\n原博客主题修改完成后报错，及其决绝办法！\n<!-- more -->\n\n原博客主题修改完成后报以下错：\n\n```\nupsmart@upsmart-pc:~/myone$ hexo s\nINFO  Start processing\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nError: watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\n    at exports._errnoException (util.js:896:11)\n    at FSWatcher.start (fs.js:1423:19)\n    at Object.fs.watch (fs.js:1450:11)\n    at createFsWatchInstance (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:37:15)\n    at setFsWatchListener (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:80:15)\n    at FSWatcher.NodeFsHandler._watchWithNodeFs (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:228:14)\n    at FSWatcher.NodeFsHandler._handleFile (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:255:21)\n    at FSWatcher.<anonymous> (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:473:21)\n    at FSReqWrap.oncomplete (fs.js:117:15)\nFATAL watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\nError: watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\n    at exports._errnoException (util.js:896:11)\n    at FSWatcher.start (fs.js:1423:19)\n    at Object.fs.watch (fs.js:1450:11)\n    at createFsWatchInstance (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:37:15)\n    at setFsWatchListener (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:80:15)\n    at FSWatcher.NodeFsHandler._watchWithNodeFs (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:228:14)\n    at FSWatcher.NodeFsHandler._handleFile (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:255:21)\n    at FSWatcher.<anonymous> (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:473:21)\n    at FSReqWrap.oncomplete (fs.js:117:15)\n\n```\n\n看出是node_modules 里面的文件出错，但实际部署不需要，使用命令移除：\n```\nrimraf node_modules\n```\n 安装rimraf\n```\nsudo apt-get install node-rimraf\n```\n","source":"_posts/2016-10-17-博客主题修改部署问题.md","raw":"---\nlayout: post\ntitle: 博客主题修改部署问题\ndate: 2016-10-12 08:55\ncomments: true\ntags:\n- 前段\n- 博客\n- 经验\n---\n\n\n原博客主题修改完成后报错，及其决绝办法！\n<!-- more -->\n\n原博客主题修改完成后报以下错：\n\n```\nupsmart@upsmart-pc:~/myone$ hexo s\nINFO  Start processing\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nError: watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\n    at exports._errnoException (util.js:896:11)\n    at FSWatcher.start (fs.js:1423:19)\n    at Object.fs.watch (fs.js:1450:11)\n    at createFsWatchInstance (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:37:15)\n    at setFsWatchListener (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:80:15)\n    at FSWatcher.NodeFsHandler._watchWithNodeFs (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:228:14)\n    at FSWatcher.NodeFsHandler._handleFile (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:255:21)\n    at FSWatcher.<anonymous> (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:473:21)\n    at FSReqWrap.oncomplete (fs.js:117:15)\nFATAL watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\nError: watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC\n    at exports._errnoException (util.js:896:11)\n    at FSWatcher.start (fs.js:1423:19)\n    at Object.fs.watch (fs.js:1450:11)\n    at createFsWatchInstance (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:37:15)\n    at setFsWatchListener (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:80:15)\n    at FSWatcher.NodeFsHandler._watchWithNodeFs (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:228:14)\n    at FSWatcher.NodeFsHandler._handleFile (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:255:21)\n    at FSWatcher.<anonymous> (/home/upsmart/myone/node_modules/chokidar/lib/nodefs-handler.js:473:21)\n    at FSReqWrap.oncomplete (fs.js:117:15)\n\n```\n\n看出是node_modules 里面的文件出错，但实际部署不需要，使用命令移除：\n```\nrimraf node_modules\n```\n 安装rimraf\n```\nsudo apt-get install node-rimraf\n```\n","slug":"2016-10-17-博客主题修改部署问题","published":1,"updated":"2016-10-21T02:35:09.138Z","photos":[],"link":"","_id":"ciuje1kry0005d5u2dwc5acdm","content":"<p>原博客主题修改完成后报错，及其决绝办法！<br><a id=\"more\"></a></p>\n<p>原博客主题修改完成后报以下错：</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">upsmart@upsmart-<span class=\"symbol\">pc:</span>~<span class=\"regexp\">/myone$ hexo s</span></div><div class=\"line\">INFO  Start processing</div><div class=\"line\">FATAL Something's wrong. Maybe you can find the solution here: http:/<span class=\"regexp\">/hexo.io/docs</span><span class=\"regexp\">/troubleshooting.html</span></div><div class=\"line\">Error: watch /home<span class=\"regexp\">/upsmart/myone</span><span class=\"regexp\">/themes/yilia</span><span class=\"regexp\">/node_modules/sass</span>-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\">    at exports._errnoException (util.<span class=\"symbol\">js:</span><span class=\"number\">896</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at FSWatcher.start (fs.<span class=\"symbol\">js:</span><span class=\"number\">1423</span>:<span class=\"number\">19</span>)</div><div class=\"line\">    at Object.fs.watch (fs.<span class=\"symbol\">js:</span><span class=\"number\">1450</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at createFsWatchInstance (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:37:15)</span></div><div class=\"line\">    at setFsWatchListener (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:80:15)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._watchWithNodeFs (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:228:14)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._handleFile (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:255:21)</span></div><div class=\"line\">    at FSWatcher.&lt;anonymous&gt; (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:473:21)</span></div><div class=\"line\">    at FSReqWrap.oncomplete (fs.<span class=\"symbol\">js:</span><span class=\"number\">117</span>:<span class=\"number\">15</span>)</div><div class=\"line\">FATAL watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\"><span class=\"symbol\">Error:</span> watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\">    at exports._errnoException (util.<span class=\"symbol\">js:</span><span class=\"number\">896</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at FSWatcher.start (fs.<span class=\"symbol\">js:</span><span class=\"number\">1423</span>:<span class=\"number\">19</span>)</div><div class=\"line\">    at Object.fs.watch (fs.<span class=\"symbol\">js:</span><span class=\"number\">1450</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at createFsWatchInstance (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:37:15)</span></div><div class=\"line\">    at setFsWatchListener (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:80:15)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._watchWithNodeFs (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:228:14)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._handleFile (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:255:21)</span></div><div class=\"line\">    at FSWatcher.&lt;anonymous&gt; (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:473:21)</span></div><div class=\"line\">    at FSReqWrap.oncomplete (fs.<span class=\"symbol\">js:</span><span class=\"number\">117</span>:<span class=\"number\">15</span>)</div></pre></td></tr></table></figure>\n<p>看出是node_modules 里面的文件出错，但实际部署不需要，使用命令移除：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rimraf</span> node_modules</div></pre></td></tr></table></figure></p>\n<p> 安装rimraf<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install <span class=\"keyword\">node</span><span class=\"title\">-rimraf</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<p>原博客主题修改完成后报错，及其决绝办法！<br>","more":"</p>\n<p>原博客主题修改完成后报以下错：</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">upsmart@upsmart-<span class=\"symbol\">pc:</span>~<span class=\"regexp\">/myone$ hexo s</div><div class=\"line\">INFO  Start processing</div><div class=\"line\">FATAL Something's wrong. Maybe you can find the solution here: http:/</span><span class=\"regexp\">/hexo.io/docs</span><span class=\"regexp\">/troubleshooting.html</div><div class=\"line\">Error: watch /home</span><span class=\"regexp\">/upsmart/myone</span><span class=\"regexp\">/themes/yilia</span><span class=\"regexp\">/node_modules/sass</span>-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\">    at exports._errnoException (util.<span class=\"symbol\">js:</span><span class=\"number\">896</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at FSWatcher.start (fs.<span class=\"symbol\">js:</span><span class=\"number\">1423</span>:<span class=\"number\">19</span>)</div><div class=\"line\">    at Object.fs.watch (fs.<span class=\"symbol\">js:</span><span class=\"number\">1450</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at createFsWatchInstance (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:37:15)</span></div><div class=\"line\">    at setFsWatchListener (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:80:15)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._watchWithNodeFs (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:228:14)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._handleFile (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:255:21)</span></div><div class=\"line\">    at FSWatcher.&lt;anonymous&gt; (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:473:21)</span></div><div class=\"line\">    at FSReqWrap.oncomplete (fs.<span class=\"symbol\">js:</span><span class=\"number\">117</span>:<span class=\"number\">15</span>)</div><div class=\"line\">FATAL watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\"><span class=\"symbol\">Error:</span> watch /home/upsmart/myone/themes/yilia/node_modules/sass-loader/node_modules/lodash/pull.js ENOSPC</div><div class=\"line\">    at exports._errnoException (util.<span class=\"symbol\">js:</span><span class=\"number\">896</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at FSWatcher.start (fs.<span class=\"symbol\">js:</span><span class=\"number\">1423</span>:<span class=\"number\">19</span>)</div><div class=\"line\">    at Object.fs.watch (fs.<span class=\"symbol\">js:</span><span class=\"number\">1450</span>:<span class=\"number\">11</span>)</div><div class=\"line\">    at createFsWatchInstance (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:37:15)</span></div><div class=\"line\">    at setFsWatchListener (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:80:15)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._watchWithNodeFs (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:228:14)</span></div><div class=\"line\">    at FSWatcher.NodeFsHandler._handleFile (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:255:21)</span></div><div class=\"line\">    at FSWatcher.&lt;anonymous&gt; (<span class=\"regexp\">/home/upsmart</span><span class=\"regexp\">/myone/node</span>_modules/chokidar/<span class=\"class\"><span class=\"keyword\">lib</span>/<span class=\"title\">nodefs</span>-<span class=\"title\">handler</span>.<span class=\"title\">js</span>:473:21)</span></div><div class=\"line\">    at FSReqWrap.oncomplete (fs.<span class=\"symbol\">js:</span><span class=\"number\">117</span>:<span class=\"number\">15</span>)</div></pre></td></tr></table></figure>\n<p>看出是node_modules 里面的文件出错，但实际部署不需要，使用命令移除：<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">rimraf</span> node_modules</div></pre></td></tr></table></figure></p>\n<p> 安装rimraf<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install <span class=\"keyword\">node</span><span class=\"title\">-rimraf</span></div></pre></td></tr></table></figure></p>"},{"layout":"post","title":"npm","date":"2016-02-17T00:55:00.000Z","comments":1,"_content":"\n### 淘宝镜像：\n> --registry=https://registry.npm.taobao.org\n\n<!-- more -->\n\n镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n\n##### 1.通过config命令\n>npm config set registry https://registry.npm.taobao.org\n>npm info underscore （如果上面配置正确这个命令会有字符串response）\n\n##### 2.命令行指定\n>npm --registry https://registry.npm.taobao.org info underscore\n\n##### 3.编辑 ~/.npmrc 加入下面内容\n>registry = https://registry.npm.taobao.org\n\n### 命令\n\n##### 安装包，默认会安装最新的版本\n>npm install gulp\n\n##### 安装指定版本\n>npm install gulp@3.9.1\n\n##### -S, --save 安装包信息将加入到dependencies（生产阶段的依赖）\n>npm install gulp --save 或 npm install gulp -S\n\n##### package.json 文件的 dependencies 字段：\n```\n\"dependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -D, --save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\n>npm install gulp --save-dev 或 npm install gulp -D\npackage.json 文件的 devDependencies字段：\n```\n\"devDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -O, --save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\n\n>npm install gulp --save-optional 或 npm install gulp -O\npackage.json 文件的optionalDependencies字段：\n```\n\"optionalDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -E, --save-exact 精确安装指定模块版本\n\n>npm install gulp --save-exact 或 npm install gulp -E\n输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了\n```\n\"dependencies\": {\n    \"gulp\": \"3.9.1\"\n}\n```\n模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包\n>npm install\n\n##### 本地安装（local）\n>npm install gulp\n\n##### 全局安装（global）,使用 -g 或 --global\n>npm install gulp -g\n>npm uninstall 卸载模块\n\n##### 基础语法\n>npm uninstall [<@scope>/]<pkg>[@<version>]... [-S|--save|-D|--save-dev|-O|--save-optional]\n>aliases: remove, rm, r, un, unlink\n\n##### 如卸载开发版本的模块\n>npm uninstall gulp --save-dev\n","source":"_posts/2016-10-17-npm.md","raw":"---\nlayout: post\ntitle:  npm\ndate: 2016-02-17 08:55\ncomments: true\ntags:\n- 前段\n- note\n- npm\n---\n\n### 淘宝镜像：\n> --registry=https://registry.npm.taobao.org\n\n<!-- more -->\n\n镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:\n\n##### 1.通过config命令\n>npm config set registry https://registry.npm.taobao.org\n>npm info underscore （如果上面配置正确这个命令会有字符串response）\n\n##### 2.命令行指定\n>npm --registry https://registry.npm.taobao.org info underscore\n\n##### 3.编辑 ~/.npmrc 加入下面内容\n>registry = https://registry.npm.taobao.org\n\n### 命令\n\n##### 安装包，默认会安装最新的版本\n>npm install gulp\n\n##### 安装指定版本\n>npm install gulp@3.9.1\n\n##### -S, --save 安装包信息将加入到dependencies（生产阶段的依赖）\n>npm install gulp --save 或 npm install gulp -S\n\n##### package.json 文件的 dependencies 字段：\n```\n\"dependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -D, --save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\n>npm install gulp --save-dev 或 npm install gulp -D\npackage.json 文件的 devDependencies字段：\n```\n\"devDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -O, --save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\n\n>npm install gulp --save-optional 或 npm install gulp -O\npackage.json 文件的optionalDependencies字段：\n```\n\"optionalDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n##### -E, --save-exact 精确安装指定模块版本\n\n>npm install gulp --save-exact 或 npm install gulp -E\n输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了\n```\n\"dependencies\": {\n    \"gulp\": \"3.9.1\"\n}\n```\n模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包\n>npm install\n\n##### 本地安装（local）\n>npm install gulp\n\n##### 全局安装（global）,使用 -g 或 --global\n>npm install gulp -g\n>npm uninstall 卸载模块\n\n##### 基础语法\n>npm uninstall [<@scope>/]<pkg>[@<version>]... [-S|--save|-D|--save-dev|-O|--save-optional]\n>aliases: remove, rm, r, un, unlink\n\n##### 如卸载开发版本的模块\n>npm uninstall gulp --save-dev\n","slug":"2016-10-17-npm","published":1,"updated":"2016-10-21T02:34:50.002Z","photos":[],"link":"","_id":"ciuje1ks00006d5u2azcdg1dm","content":"<h3 id=\"淘宝镜像：\"><a href=\"#淘宝镜像：\" class=\"headerlink\" title=\"淘宝镜像：\"></a>淘宝镜像：</h3><blockquote>\n<p>–registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<p>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:</p>\n<h5 id=\"1-通过config命令\"><a href=\"#1-通过config命令\" class=\"headerlink\" title=\"1.通过config命令\"></a>1.通过config命令</h5><blockquote>\n<p>npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a><br>npm info underscore （如果上面配置正确这个命令会有字符串response）</p>\n</blockquote>\n<h5 id=\"2-命令行指定\"><a href=\"#2-命令行指定\" class=\"headerlink\" title=\"2.命令行指定\"></a>2.命令行指定</h5><blockquote>\n<p>npm –registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a> info underscore</p>\n</blockquote>\n<h5 id=\"3-编辑-npmrc-加入下面内容\"><a href=\"#3-编辑-npmrc-加入下面内容\" class=\"headerlink\" title=\"3.编辑 ~/.npmrc 加入下面内容\"></a>3.编辑 ~/.npmrc 加入下面内容</h5><blockquote>\n<p>registry = <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a></p>\n</blockquote>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><h5 id=\"安装包，默认会安装最新的版本\"><a href=\"#安装包，默认会安装最新的版本\" class=\"headerlink\" title=\"安装包，默认会安装最新的版本\"></a>安装包，默认会安装最新的版本</h5><blockquote>\n<p>npm install gulp</p>\n</blockquote>\n<h5 id=\"安装指定版本\"><a href=\"#安装指定版本\" class=\"headerlink\" title=\"安装指定版本\"></a>安装指定版本</h5><blockquote>\n<p>npm install gulp@3.9.1</p>\n</blockquote>\n<h5 id=\"S-–save-安装包信息将加入到dependencies（生产阶段的依赖）\"><a href=\"#S-–save-安装包信息将加入到dependencies（生产阶段的依赖）\" class=\"headerlink\" title=\"-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）\"></a>-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）</h5><blockquote>\n<p>npm install gulp –save 或 npm install gulp -S</p>\n</blockquote>\n<h5 id=\"package-json-文件的-dependencies-字段：\"><a href=\"#package-json-文件的-dependencies-字段：\" class=\"headerlink\" title=\"package.json 文件的 dependencies 字段：\"></a>package.json 文件的 dependencies 字段：</h5><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"D-–save-dev-安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\"><a href=\"#D-–save-dev-安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\" class=\"headerlink\" title=\"-D, –save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\"></a>-D, –save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它</h5><blockquote>\n<p>npm install gulp –save-dev 或 npm install gulp -D<br>package.json 文件的 devDependencies字段：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"devDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"O-–save-optional-安装包信息将加入到optionalDependencies（可选阶段的依赖）\"><a href=\"#O-–save-optional-安装包信息将加入到optionalDependencies（可选阶段的依赖）\" class=\"headerlink\" title=\"-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\"></a>-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）</h5><blockquote>\n<p>npm install gulp –save-optional 或 npm install gulp -O<br>package.json 文件的optionalDependencies字段：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"optionalDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"E-–save-exact-精确安装指定模块版本\"><a href=\"#E-–save-exact-精确安装指定模块版本\" class=\"headerlink\" title=\"-E, –save-exact 精确安装指定模块版本\"></a>-E, –save-exact 精确安装指定模块版本</h5><blockquote>\n<p>npm install gulp –save-exact 或 npm install gulp -E<br>输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包</p>\n<blockquote>\n<p>npm install</p>\n</blockquote>\n<h5 id=\"本地安装（local）\"><a href=\"#本地安装（local）\" class=\"headerlink\" title=\"本地安装（local）\"></a>本地安装（local）</h5><blockquote>\n<p>npm install gulp</p>\n</blockquote>\n<h5 id=\"全局安装（global）-使用-g-或-–global\"><a href=\"#全局安装（global）-使用-g-或-–global\" class=\"headerlink\" title=\"全局安装（global）,使用 -g 或 –global\"></a>全局安装（global）,使用 -g 或 –global</h5><blockquote>\n<p>npm install gulp -g<br>npm uninstall 卸载模块</p>\n</blockquote>\n<h5 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h5><blockquote>\n<p>npm uninstall [&lt;@scope&gt;/]<pkg>[@<version>]… [-S|–save|-D|–save-dev|-O|–save-optional]<br>aliases: remove, rm, r, un, unlink</version></pkg></p>\n</blockquote>\n<h5 id=\"如卸载开发版本的模块\"><a href=\"#如卸载开发版本的模块\" class=\"headerlink\" title=\"如卸载开发版本的模块\"></a>如卸载开发版本的模块</h5><blockquote>\n<p>npm uninstall gulp –save-dev</p>\n</blockquote>\n","excerpt":"<h3 id=\"淘宝镜像：\"><a href=\"#淘宝镜像：\" class=\"headerlink\" title=\"淘宝镜像：\"></a>淘宝镜像：</h3><blockquote>\n<p>–registry=<a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></p>\n</blockquote>","more":"<p>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:</p>\n<h5 id=\"1-通过config命令\"><a href=\"#1-通过config命令\" class=\"headerlink\" title=\"1.通过config命令\"></a>1.通过config命令</h5><blockquote>\n<p>npm config set registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a><br>npm info underscore （如果上面配置正确这个命令会有字符串response）</p>\n</blockquote>\n<h5 id=\"2-命令行指定\"><a href=\"#2-命令行指定\" class=\"headerlink\" title=\"2.命令行指定\"></a>2.命令行指定</h5><blockquote>\n<p>npm –registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a> info underscore</p>\n</blockquote>\n<h5 id=\"3-编辑-npmrc-加入下面内容\"><a href=\"#3-编辑-npmrc-加入下面内容\" class=\"headerlink\" title=\"3.编辑 ~/.npmrc 加入下面内容\"></a>3.编辑 ~/.npmrc 加入下面内容</h5><blockquote>\n<p>registry = <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></p>\n</blockquote>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><h5 id=\"安装包，默认会安装最新的版本\"><a href=\"#安装包，默认会安装最新的版本\" class=\"headerlink\" title=\"安装包，默认会安装最新的版本\"></a>安装包，默认会安装最新的版本</h5><blockquote>\n<p>npm install gulp</p>\n</blockquote>\n<h5 id=\"安装指定版本\"><a href=\"#安装指定版本\" class=\"headerlink\" title=\"安装指定版本\"></a>安装指定版本</h5><blockquote>\n<p>npm install gulp@3.9.1</p>\n</blockquote>\n<h5 id=\"S-–save-安装包信息将加入到dependencies（生产阶段的依赖）\"><a href=\"#S-–save-安装包信息将加入到dependencies（生产阶段的依赖）\" class=\"headerlink\" title=\"-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）\"></a>-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）</h5><blockquote>\n<p>npm install gulp –save 或 npm install gulp -S</p>\n</blockquote>\n<h5 id=\"package-json-文件的-dependencies-字段：\"><a href=\"#package-json-文件的-dependencies-字段：\" class=\"headerlink\" title=\"package.json 文件的 dependencies 字段：\"></a>package.json 文件的 dependencies 字段：</h5><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"D-–save-dev-安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\"><a href=\"#D-–save-dev-安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\" class=\"headerlink\" title=\"-D, –save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它\"></a>-D, –save-dev 安装包信息将加入到devDependencies（开发阶段的依赖），所以开发阶段一般使用它</h5><blockquote>\n<p>npm install gulp –save-dev 或 npm install gulp -D<br>package.json 文件的 devDependencies字段：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"devDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"O-–save-optional-安装包信息将加入到optionalDependencies（可选阶段的依赖）\"><a href=\"#O-–save-optional-安装包信息将加入到optionalDependencies（可选阶段的依赖）\" class=\"headerlink\" title=\"-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\"></a>-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）</h5><blockquote>\n<p>npm install gulp –save-optional 或 npm install gulp -O<br>package.json 文件的optionalDependencies字段：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"optionalDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h5 id=\"E-–save-exact-精确安装指定模块版本\"><a href=\"#E-–save-exact-精确安装指定模块版本\" class=\"headerlink\" title=\"-E, –save-exact 精确安装指定模块版本\"></a>-E, –save-exact 精确安装指定模块版本</h5><blockquote>\n<p>npm install gulp –save-exact 或 npm install gulp -E<br>输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"3.9.1\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包</p>\n<blockquote>\n<p>npm install</p>\n</blockquote>\n<h5 id=\"本地安装（local）\"><a href=\"#本地安装（local）\" class=\"headerlink\" title=\"本地安装（local）\"></a>本地安装（local）</h5><blockquote>\n<p>npm install gulp</p>\n</blockquote>\n<h5 id=\"全局安装（global）-使用-g-或-–global\"><a href=\"#全局安装（global）-使用-g-或-–global\" class=\"headerlink\" title=\"全局安装（global）,使用 -g 或 –global\"></a>全局安装（global）,使用 -g 或 –global</h5><blockquote>\n<p>npm install gulp -g<br>npm uninstall 卸载模块</p>\n</blockquote>\n<h5 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h5><blockquote>\n<p>npm uninstall [&lt;@scope&gt;/]<pkg>[@<version>]… [-S|–save|-D|–save-dev|-O|–save-optional]<br>aliases: remove, rm, r, un, unlink</p>\n</blockquote>\n<h5 id=\"如卸载开发版本的模块\"><a href=\"#如卸载开发版本的模块\" class=\"headerlink\" title=\"如卸载开发版本的模块\"></a>如卸载开发版本的模块</h5><blockquote>\n<p>npm uninstall gulp –save-dev</p>\n</blockquote>"},{"layout":"post","title":"webpack","date":"2016-02-16T00:55:00.000Z","comments":1,"_content":"Webpack！\n<!-- more -->\n\n### 安装\nWebpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。\n\n```\n//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n```\n\n### 正式使用Webpack前的准备\n","source":"_posts/2016-10-19-webpack.md","raw":"---\nlayout: post\ntitle: webpack\ndate: 2016-02-16 08:55\ncomments: true\ntags:\n- 前段\n- 博客\n- 经验\n- webpack\n---\nWebpack！\n<!-- more -->\n\n### 安装\nWebpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。\n\n```\n//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n```\n\n### 正式使用Webpack前的准备\n","slug":"2016-10-19-webpack","published":1,"updated":"2016-10-21T02:34:43.206Z","photos":[],"link":"","_id":"ciuje1ks20007d5u2vk5nixyz","content":"<p>Webpack！<br><a id=\"more\"></a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>Webpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//全局安装</span></div><div class=\"line\">npm install -g webpack</div><div class=\"line\"><span class=\"comment\">//安装到你的项目目录</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure>\n<h3 id=\"正式使用Webpack前的准备\"><a href=\"#正式使用Webpack前的准备\" class=\"headerlink\" title=\"正式使用Webpack前的准备\"></a>正式使用Webpack前的准备</h3>","excerpt":"<p>Webpack！<br>","more":"</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>Webpack可以使用npm安装，新建一个空的练习文件夹（此处命名为webpack sample progect），在终端中转到该文件夹后执行下述指令就可以完成安装。</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//全局安装</span></div><div class=\"line\">npm install -g webpack</div><div class=\"line\"><span class=\"comment\">//安装到你的项目目录</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure>\n<h3 id=\"正式使用Webpack前的准备\"><a href=\"#正式使用Webpack前的准备\" class=\"headerlink\" title=\"正式使用Webpack前的准备\"></a>正式使用Webpack前的准备</h3>"},{"layout":"post","title":"GIT同时配置两个SSH","date":"2016-10-21T03:24:00.000Z","comments":1,"_content":"\n\n###### Heading 6 link\n\n个人需要配置一个公司的GitLab以及一个Github两个SSH!\n\n<!-- more -->\n\n先按照[GitLab ](https://github.com/settings/keys) 官网配置github的SSH。\n\n之后添加公司SSH.\n\n执行一下命令：\n```\nssh-keygen -t rsa -C 'myusername@mycompanyname.com'\n# 然后会让你输入文件名，可以输入 id_rsa_mycompanyname\n# 然后一路回车就行\n```\n\n>将生成的两个文件  id_rsa_mycompanyname  和 id_rsa_mycompanyname.pub 拷贝到目录 \\.ssh 下。\n\n>在目录 .ssh 下找到文件 config ，如果没有这个文件，则新建一个，切记，这个文件没有后缀名！\n\n>在 config 里加入如下内容：\n\n```\n#默认github  github user(myusername@mygithubMail.com)\nHost github\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa\n\n# 公司gitLab 修改HostName  user(myusername@mycompanyname.com)\nHost git.myone.com\n    HostName git.myone.com\n    User git\n    Port 22\n    IdentityFile ~/.ssh/id_rsa_mycompanyname\n\n```\n\n>将这个生成的 id_rsa_mycompanyname.pub 的内容加入到 gitlab上的SSH上后，即可使用！\n此时，github和gitlab 都可正常使用。如果有其他的网站，也可以按照这种方法继续处理。每一个 ssh的生成都要对应站点使用的email 。\n","source":"_posts/2016-10-21-GIT同时配置两个SSH.md","raw":"---\nlayout: post\ntitle: GIT同时配置两个SSH\ndate: 2016-10-21 11:24\ncomments: true\ntags:\n- 前段\n- GIT\n- SSH\n---\n\n\n###### Heading 6 link\n\n个人需要配置一个公司的GitLab以及一个Github两个SSH!\n\n<!-- more -->\n\n先按照[GitLab ](https://github.com/settings/keys) 官网配置github的SSH。\n\n之后添加公司SSH.\n\n执行一下命令：\n```\nssh-keygen -t rsa -C 'myusername@mycompanyname.com'\n# 然后会让你输入文件名，可以输入 id_rsa_mycompanyname\n# 然后一路回车就行\n```\n\n>将生成的两个文件  id_rsa_mycompanyname  和 id_rsa_mycompanyname.pub 拷贝到目录 \\.ssh 下。\n\n>在目录 .ssh 下找到文件 config ，如果没有这个文件，则新建一个，切记，这个文件没有后缀名！\n\n>在 config 里加入如下内容：\n\n```\n#默认github  github user(myusername@mygithubMail.com)\nHost github\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa\n\n# 公司gitLab 修改HostName  user(myusername@mycompanyname.com)\nHost git.myone.com\n    HostName git.myone.com\n    User git\n    Port 22\n    IdentityFile ~/.ssh/id_rsa_mycompanyname\n\n```\n\n>将这个生成的 id_rsa_mycompanyname.pub 的内容加入到 gitlab上的SSH上后，即可使用！\n此时，github和gitlab 都可正常使用。如果有其他的网站，也可以按照这种方法继续处理。每一个 ssh的生成都要对应站点使用的email 。\n","slug":"2016-10-21-GIT同时配置两个SSH","published":1,"updated":"2016-10-21T06:20:23.370Z","photos":[],"link":"","_id":"ciuje1ks5000ad5u2cr5w5ojt","content":"<h6 id=\"Heading-6-link\"><a href=\"#Heading-6-link\" class=\"headerlink\" title=\"Heading 6 link\"></a>Heading 6 link</h6><p>个人需要配置一个公司的GitLab以及一个Github两个SSH!</p>\n<a id=\"more\"></a>\n<p>先按照<a href=\"https://github.com/settings/keys\" target=\"_blank\" rel=\"external\">GitLab </a> 官网配置github的SSH。</p>\n<p>之后添加公司SSH.</p>\n<p>执行一下命令：<br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">'myusername@mycompanyname.com'</span></div><div class=\"line\"><span class=\"meta\"># 然后会让你输入文件名，可以输入 id_rsa_mycompanyname</span></div><div class=\"line\"><span class=\"meta\"># 然后一路回车就行</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>将生成的两个文件  id_rsa_mycompanyname  和 id_rsa_mycompanyname.pub 拷贝到目录 .ssh 下。</p>\n<p>在目录 .ssh 下找到文件 config ，如果没有这个文件，则新建一个，切记，这个文件没有后缀名！</p>\n<p>在 config 里加入如下内容：</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#默认<span class=\"selector-tag\">github</span>  <span class=\"selector-tag\">github</span> <span class=\"selector-tag\">user</span>(myusername<span class=\"variable\">@mygithubMail</span>.com)</div><div class=\"line\"><span class=\"selector-tag\">Host</span> <span class=\"selector-tag\">github</span></div><div class=\"line\">    <span class=\"selector-tag\">HostName</span> <span class=\"selector-tag\">github</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">User</span> <span class=\"selector-tag\">git</span></div><div class=\"line\">    <span class=\"selector-tag\">IdentityFile</span> ~/<span class=\"selector-class\">.ssh</span>/<span class=\"selector-tag\">id_rsa</span></div><div class=\"line\"></div><div class=\"line\"># 公司<span class=\"selector-tag\">gitLab</span> 修改<span class=\"selector-tag\">HostName</span>  <span class=\"selector-tag\">user</span>(myusername<span class=\"variable\">@mycompanyname</span>.com)</div><div class=\"line\"><span class=\"selector-tag\">Host</span> <span class=\"selector-tag\">git</span><span class=\"selector-class\">.myone</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">HostName</span> <span class=\"selector-tag\">git</span><span class=\"selector-class\">.myone</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">User</span> <span class=\"selector-tag\">git</span></div><div class=\"line\">    <span class=\"selector-tag\">Port</span> <span class=\"selector-tag\">22</span></div><div class=\"line\">    <span class=\"selector-tag\">IdentityFile</span> ~/<span class=\"selector-class\">.ssh</span>/<span class=\"selector-tag\">id_rsa_mycompanyname</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>将这个生成的 id_rsa_mycompanyname.pub 的内容加入到 gitlab上的SSH上后，即可使用！<br>此时，github和gitlab 都可正常使用。如果有其他的网站，也可以按照这种方法继续处理。每一个 ssh的生成都要对应站点使用的email 。</p>\n</blockquote>\n","excerpt":"<h6 id=\"Heading-6-link\"><a href=\"#Heading-6-link\" class=\"headerlink\" title=\"Heading 6 link\"></a>Heading 6 link</h6><p>个人需要配置一个公司的GitLab以及一个Github两个SSH!</p>","more":"<p>先按照<a href=\"https://github.com/settings/keys\">GitLab </a> 官网配置github的SSH。</p>\n<p>之后添加公司SSH.</p>\n<p>执行一下命令：<br><figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">'myusername@mycompanyname.com'</span></div><div class=\"line\"><span class=\"meta\"># 然后会让你输入文件名，可以输入 id_rsa_mycompanyname</span></div><div class=\"line\"><span class=\"meta\"># 然后一路回车就行</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>将生成的两个文件  id_rsa_mycompanyname  和 id_rsa_mycompanyname.pub 拷贝到目录 .ssh 下。</p>\n<p>在目录 .ssh 下找到文件 config ，如果没有这个文件，则新建一个，切记，这个文件没有后缀名！</p>\n<p>在 config 里加入如下内容：</p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#默认<span class=\"selector-tag\">github</span>  <span class=\"selector-tag\">github</span> <span class=\"selector-tag\">user</span>(myusername<span class=\"variable\">@mygithubMail</span>.com)</div><div class=\"line\"><span class=\"selector-tag\">Host</span> <span class=\"selector-tag\">github</span></div><div class=\"line\">    <span class=\"selector-tag\">HostName</span> <span class=\"selector-tag\">github</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">User</span> <span class=\"selector-tag\">git</span></div><div class=\"line\">    <span class=\"selector-tag\">IdentityFile</span> ~/<span class=\"selector-class\">.ssh</span>/<span class=\"selector-tag\">id_rsa</span></div><div class=\"line\"></div><div class=\"line\"># 公司<span class=\"selector-tag\">gitLab</span> 修改<span class=\"selector-tag\">HostName</span>  <span class=\"selector-tag\">user</span>(myusername<span class=\"variable\">@mycompanyname</span>.com)</div><div class=\"line\"><span class=\"selector-tag\">Host</span> <span class=\"selector-tag\">git</span><span class=\"selector-class\">.myone</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">HostName</span> <span class=\"selector-tag\">git</span><span class=\"selector-class\">.myone</span><span class=\"selector-class\">.com</span></div><div class=\"line\">    <span class=\"selector-tag\">User</span> <span class=\"selector-tag\">git</span></div><div class=\"line\">    <span class=\"selector-tag\">Port</span> <span class=\"selector-tag\">22</span></div><div class=\"line\">    <span class=\"selector-tag\">IdentityFile</span> ~/<span class=\"selector-class\">.ssh</span>/<span class=\"selector-tag\">id_rsa_mycompanyname</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>将这个生成的 id_rsa_mycompanyname.pub 的内容加入到 gitlab上的SSH上后，即可使用！<br>此时，github和gitlab 都可正常使用。如果有其他的网站，也可以按照这种方法继续处理。每一个 ssh的生成都要对应站点使用的email 。</p>\n</blockquote>"},{"layout":"post","title":"前段框架搭建问题汇总-①","date":"2016-02-12T00:55:00.000Z","comments":1,"_content":"\n框架搭建过程！\n\n<!-- more -->\n\n\n###### 安装Webpack\n```\n//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n```\n\n###### 初始化项目\n```\nmkdir  ProjectName\ncd        ProjectName\nnpm init //自动创建这个package.json\n```\n\n1.package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包\n```\n// 安装Webpack\nnpm install --save-dev webpack\n```\n\n2.创建项目文件夹及其入口文件\n```\nmkdir app  \ncd       app\ntouch  main.js  Greeter.js\n```\n\n\n\n\n\n\n```\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n//分离CSS和JS文件插件\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    devtool: 'eval-source-map', //配置生成Source Maps，选择合适的选项\n\n    entry: __dirname + \"/app/main.js\", //已多次提及的唯一入口文件\n    output: {\n        path: __dirname + \"/dist\", //打包后的文件存放的地方\n        //缓存 把一个哈希值添加到打包的文件名中\n        filename: \"[name]-[hash].chunk.js\" //打包后输出文件的文件名\n    },\n\n\n    module: {\n        loaders: [ //在配置文件里添加JSON loader\n            {\n                test: /\\.json$/,\n                loader: \"json\"\n            }, {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                loader: 'babel' //在webpack的module部分的loaders里进行配置即可\n            }, {\n                test: /\\.css$/,\n                //分离CSS和JS文件插件\n                loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n            }\n        ]\n    },\n    postcss: [\n        require('autoprefixer') //调用autoprefixer插件\n    ],\n\n    plugins: [\n        new webpack.BannerPlugin(\"Copyright unionpaysmart  inc.\"), //在这个数组中new一个就可以了\n        new HtmlWebpackPlugin({\n            template: __dirname + \"/app/html/index.tmpl.html\" //new 一个这个插件的实例，并传入相关的参数\n        }),\n        new webpack.HotModuleReplacementPlugin(), //热加载插件\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"[name]-[hash].css\")\n    ],\n\n    //使用webpack构建本地服务器\n    devServer: {\n        contentBase: \"./public\", //本地服务器所加载的页面所在的目录\n        colors: true, //终端中输出结果为彩色\n        historyApiFallback: true, //不跳转\n        inline: true //实时刷新\n    }\n}\n\n```\n\n\n\n\n\n###### 点击查看 [参考文件](http://www.jianshu.com/p/42e11515c10f#\"Heading link\")\n","source":"_posts/2016-10-21-前段框架搭建问题汇总-1.md","raw":"---\nlayout: post\ntitle: 前段框架搭建问题汇总-①\ndate: 2016-02-12 08:55\ncomments: true\ntags:\n- 前段\n- 笔记\n- 框架搭建\n- webpack\n---\n\n框架搭建过程！\n\n<!-- more -->\n\n\n###### 安装Webpack\n```\n//全局安装\nnpm install -g webpack\n//安装到你的项目目录\nnpm install --save-dev webpack\n```\n\n###### 初始化项目\n```\nmkdir  ProjectName\ncd        ProjectName\nnpm init //自动创建这个package.json\n```\n\n1.package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包\n```\n// 安装Webpack\nnpm install --save-dev webpack\n```\n\n2.创建项目文件夹及其入口文件\n```\nmkdir app  \ncd       app\ntouch  main.js  Greeter.js\n```\n\n\n\n\n\n\n```\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n//分离CSS和JS文件插件\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    devtool: 'eval-source-map', //配置生成Source Maps，选择合适的选项\n\n    entry: __dirname + \"/app/main.js\", //已多次提及的唯一入口文件\n    output: {\n        path: __dirname + \"/dist\", //打包后的文件存放的地方\n        //缓存 把一个哈希值添加到打包的文件名中\n        filename: \"[name]-[hash].chunk.js\" //打包后输出文件的文件名\n    },\n\n\n    module: {\n        loaders: [ //在配置文件里添加JSON loader\n            {\n                test: /\\.json$/,\n                loader: \"json\"\n            }, {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                loader: 'babel' //在webpack的module部分的loaders里进行配置即可\n            }, {\n                test: /\\.css$/,\n                //分离CSS和JS文件插件\n                loader: ExtractTextPlugin.extract('style', 'css?modules!postcss')\n            }\n        ]\n    },\n    postcss: [\n        require('autoprefixer') //调用autoprefixer插件\n    ],\n\n    plugins: [\n        new webpack.BannerPlugin(\"Copyright unionpaysmart  inc.\"), //在这个数组中new一个就可以了\n        new HtmlWebpackPlugin({\n            template: __dirname + \"/app/html/index.tmpl.html\" //new 一个这个插件的实例，并传入相关的参数\n        }),\n        new webpack.HotModuleReplacementPlugin(), //热加载插件\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n        new ExtractTextPlugin(\"[name]-[hash].css\")\n    ],\n\n    //使用webpack构建本地服务器\n    devServer: {\n        contentBase: \"./public\", //本地服务器所加载的页面所在的目录\n        colors: true, //终端中输出结果为彩色\n        historyApiFallback: true, //不跳转\n        inline: true //实时刷新\n    }\n}\n\n```\n\n\n\n\n\n###### 点击查看 [参考文件](http://www.jianshu.com/p/42e11515c10f#\"Heading link\")\n","slug":"2016-10-21-前段框架搭建问题汇总-1","published":1,"updated":"2016-10-21T03:23:14.686Z","photos":[],"link":"","_id":"ciuje1ks7000bd5u25k1krp6l","content":"<p>框架搭建过程！</p>\n<a id=\"more\"></a>\n<h6 id=\"安装Webpack\"><a href=\"#安装Webpack\" class=\"headerlink\" title=\"安装Webpack\"></a>安装Webpack</h6><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//全局安装</span></div><div class=\"line\">npm install -g webpack</div><div class=\"line\"><span class=\"comment\">//安装到你的项目目录</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure>\n<h6 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h6><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span>  ProjectName</div><div class=\"line\"><span class=\"keyword\">cd</span>        ProjectName</div><div class=\"line\">npm init <span class=\"comment\">//自动创建这个package.json</span></div></pre></td></tr></table></figure>\n<p>1.package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 安装Webpack</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure></p>\n<p>2.创建项目文件夹及其入口文件<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span> <span class=\"keyword\">app</span>  </div><div class=\"line\"><span class=\"keyword\">cd</span>       <span class=\"keyword\">app</span></div><div class=\"line\">touch  main.js  Greeter.js</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</div><div class=\"line\"><span class=\"comment\">//分离CSS和JS文件插件</span></div><div class=\"line\"><span class=\"keyword\">var</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    devtool: <span class=\"string\">'eval-source-map'</span>, <span class=\"comment\">//配置生成Source Maps，选择合适的选项</span></div><div class=\"line\"></div><div class=\"line\">    entry: __dirname + <span class=\"string\">\"/app/main.js\"</span>, <span class=\"comment\">//已多次提及的唯一入口文件</span></div><div class=\"line\">    output: &#123;</div><div class=\"line\">        path: __dirname + <span class=\"string\">\"/dist\"</span>, <span class=\"comment\">//打包后的文件存放的地方</span></div><div class=\"line\">        <span class=\"comment\">//缓存 把一个哈希值添加到打包的文件名中</span></div><div class=\"line\">        filename: <span class=\"string\">\"[name]-[hash].chunk.js\"</span> <span class=\"comment\">//打包后输出文件的文件名</span></div><div class=\"line\">    &#125;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">module</span>: &#123;</div><div class=\"line\">        loaders: [ <span class=\"comment\">//在配置文件里添加JSON loader</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.json$/</span>,</div><div class=\"line\">                loader: <span class=\"string\">\"json\"</span></div><div class=\"line\">            &#125;, &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.js$/</span>,</div><div class=\"line\">                exclude: <span class=\"regexp\">/node_modules/</span>,</div><div class=\"line\">                loader: <span class=\"string\">'babel'</span> <span class=\"comment\">//在webpack的module部分的loaders里进行配置即可</span></div><div class=\"line\">            &#125;, &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.css$/</span>,</div><div class=\"line\">                <span class=\"comment\">//分离CSS和JS文件插件</span></div><div class=\"line\">                loader: ExtractTextPlugin.extract(<span class=\"string\">'style'</span>, <span class=\"string\">'css?modules!postcss'</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;,</div><div class=\"line\">    postcss: [</div><div class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'autoprefixer'</span>) <span class=\"comment\">//调用autoprefixer插件</span></div><div class=\"line\">    ],</div><div class=\"line\"></div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.BannerPlugin(<span class=\"string\">\"Copyright unionpaysmart  inc.\"</span>), <span class=\"comment\">//在这个数组中new一个就可以了</span></div><div class=\"line\">        <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">            template: __dirname + <span class=\"string\">\"/app/html/index.tmpl.html\"</span> <span class=\"comment\">//new 一个这个插件的实例，并传入相关的参数</span></div><div class=\"line\">        &#125;),</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//热加载插件</span></div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.OccurenceOrderPlugin(),</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.UglifyJsPlugin(),</div><div class=\"line\">        <span class=\"keyword\">new</span> ExtractTextPlugin(<span class=\"string\">\"[name]-[hash].css\"</span>)</div><div class=\"line\">    ],</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//使用webpack构建本地服务器</span></div><div class=\"line\">    devServer: &#123;</div><div class=\"line\">        contentBase: <span class=\"string\">\"./public\"</span>, <span class=\"comment\">//本地服务器所加载的页面所在的目录</span></div><div class=\"line\">        colors: <span class=\"literal\">true</span>, <span class=\"comment\">//终端中输出结果为彩色</span></div><div class=\"line\">        historyApiFallback: <span class=\"literal\">true</span>, <span class=\"comment\">//不跳转</span></div><div class=\"line\">        inline: <span class=\"literal\">true</span> <span class=\"comment\">//实时刷新</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h6 id=\"点击查看-参考文件\"><a href=\"#点击查看-参考文件\" class=\"headerlink\" title=\"点击查看 参考文件\"></a>点击查看 <a href=\"http://www.jianshu.com/p/42e11515c10f#&quot;Heading link&quot;\" target=\"_blank\" rel=\"external\">参考文件</a></h6>","excerpt":"<p>框架搭建过程！</p>","more":"<h6 id=\"安装Webpack\"><a href=\"#安装Webpack\" class=\"headerlink\" title=\"安装Webpack\"></a>安装Webpack</h6><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//全局安装</span></div><div class=\"line\">npm install -g webpack</div><div class=\"line\"><span class=\"comment\">//安装到你的项目目录</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure>\n<h6 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h6><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span>  ProjectName</div><div class=\"line\"><span class=\"keyword\">cd</span>        ProjectName</div><div class=\"line\">npm init <span class=\"comment\">//自动创建这个package.json</span></div></pre></td></tr></table></figure>\n<p>1.package.json文件已经就绪，我们在本项目中安装Webpack作为依赖包<br><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 安装Webpack</span></div><div class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> webpack</div></pre></td></tr></table></figure></p>\n<p>2.创建项目文件夹及其入口文件<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span> <span class=\"keyword\">app</span>  </div><div class=\"line\"><span class=\"keyword\">cd</span>       <span class=\"keyword\">app</span></div><div class=\"line\">touch  main.js  Greeter.js</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</div><div class=\"line\"><span class=\"comment\">//分离CSS和JS文件插件</span></div><div class=\"line\"><span class=\"keyword\">var</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    devtool: <span class=\"string\">'eval-source-map'</span>, <span class=\"comment\">//配置生成Source Maps，选择合适的选项</span></div><div class=\"line\"></div><div class=\"line\">    entry: __dirname + <span class=\"string\">\"/app/main.js\"</span>, <span class=\"comment\">//已多次提及的唯一入口文件</span></div><div class=\"line\">    output: &#123;</div><div class=\"line\">        path: __dirname + <span class=\"string\">\"/dist\"</span>, <span class=\"comment\">//打包后的文件存放的地方</span></div><div class=\"line\">        <span class=\"comment\">//缓存 把一个哈希值添加到打包的文件名中</span></div><div class=\"line\">        filename: <span class=\"string\">\"[name]-[hash].chunk.js\"</span> <span class=\"comment\">//打包后输出文件的文件名</span></div><div class=\"line\">    &#125;,</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">module</span>: &#123;</div><div class=\"line\">        loaders: [ <span class=\"comment\">//在配置文件里添加JSON loader</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.json$/</span>,</div><div class=\"line\">                loader: <span class=\"string\">\"json\"</span></div><div class=\"line\">            &#125;, &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.js$/</span>,</div><div class=\"line\">                exclude: <span class=\"regexp\">/node_modules/</span>,</div><div class=\"line\">                loader: <span class=\"string\">'babel'</span> <span class=\"comment\">//在webpack的module部分的loaders里进行配置即可</span></div><div class=\"line\">            &#125;, &#123;</div><div class=\"line\">                test: <span class=\"regexp\">/\\.css$/</span>,</div><div class=\"line\">                <span class=\"comment\">//分离CSS和JS文件插件</span></div><div class=\"line\">                loader: ExtractTextPlugin.extract(<span class=\"string\">'style'</span>, <span class=\"string\">'css?modules!postcss'</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;,</div><div class=\"line\">    postcss: [</div><div class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'autoprefixer'</span>) <span class=\"comment\">//调用autoprefixer插件</span></div><div class=\"line\">    ],</div><div class=\"line\"></div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.BannerPlugin(<span class=\"string\">\"Copyright unionpaysmart  inc.\"</span>), <span class=\"comment\">//在这个数组中new一个就可以了</span></div><div class=\"line\">        <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">            template: __dirname + <span class=\"string\">\"/app/html/index.tmpl.html\"</span> <span class=\"comment\">//new 一个这个插件的实例，并传入相关的参数</span></div><div class=\"line\">        &#125;),</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">//热加载插件</span></div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.OccurenceOrderPlugin(),</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.optimize.UglifyJsPlugin(),</div><div class=\"line\">        <span class=\"keyword\">new</span> ExtractTextPlugin(<span class=\"string\">\"[name]-[hash].css\"</span>)</div><div class=\"line\">    ],</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//使用webpack构建本地服务器</span></div><div class=\"line\">    devServer: &#123;</div><div class=\"line\">        contentBase: <span class=\"string\">\"./public\"</span>, <span class=\"comment\">//本地服务器所加载的页面所在的目录</span></div><div class=\"line\">        colors: <span class=\"literal\">true</span>, <span class=\"comment\">//终端中输出结果为彩色</span></div><div class=\"line\">        historyApiFallback: <span class=\"literal\">true</span>, <span class=\"comment\">//不跳转</span></div><div class=\"line\">        inline: <span class=\"literal\">true</span> <span class=\"comment\">//实时刷新</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h6 id=\"点击查看-参考文件\"><a href=\"#点击查看-参考文件\" class=\"headerlink\" title=\"点击查看 参考文件\"></a>点击查看 <a href=\"http://www.jianshu.com/p/42e11515c10f#&quot;Heading link&quot;\">参考文件</a></h6>"},{"layout":"post","title":"特效展示","date":"2016-02-17T00:55:00.000Z","comments":1,"_content":"点击更多预览！\n\n<!-- more -->\n\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0,\n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n\n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n\n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n\n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n\n    if(r > rstop) discard;\n\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n\n    col = mix(fadeCol, col, distancefade);\n\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n\n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n\n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n\n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n\n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n\n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n\n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n\n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n\n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n    if(vsh == null || fsh == null) {\n        return null;\n    }\n\n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n\n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n\n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n\n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n\n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n\n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n\n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n\n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n\n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    unuseShader(pointFlower.program);\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n\n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n\n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n\n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n\n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n\n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n\n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n\n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n\n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n\n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n\n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n\n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    var prog = pointFlower.program;\n    useShader(prog);\n\n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n\n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n\n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n\n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n\n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n\n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n\n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n\n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n\n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n\n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n\n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n\n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n\n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n\n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n\n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n\n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n\n    gl.enable(gl.DEPTH_TEST);\n\n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n\n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n\n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n\n    window.addEventListener('resize', onResize);\n\n    setViewports();\n    createScene();\n    initScene();\n\n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","source":"_posts/hello-world.html","raw":"---\nlayout: post\ntitle:  特效展示\ndate: 2016-02-17 08:55\ncomments: true\ntags:\n- HTML5\n---\n点击更多预览！\n\n<!-- more -->\n\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0,\n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n\n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n\n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n\n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n\n    if(r > rstop) discard;\n\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n\n    col = mix(fadeCol, col, distancefade);\n\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n\n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n\n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n\n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n\n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n\n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n\n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n\n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n\n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n    if(vsh == null || fsh == null) {\n        return null;\n    }\n\n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n\n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n\n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n\n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n\n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n\n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n\n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n\n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n\n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    unuseShader(pointFlower.program);\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n\n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n\n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n\n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n\n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n\n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n\n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n\n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n\n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n\n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n\n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n\n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    var prog = pointFlower.program;\n    useShader(prog);\n\n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n\n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n\n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n\n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n\n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n\n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n\n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n\n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n\n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n\n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n\n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n\n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n\n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n\n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n\n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n\n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n\n    gl.enable(gl.DEPTH_TEST);\n\n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n\n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n\n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n\n    window.addEventListener('resize', onResize);\n\n    setViewports();\n    createScene();\n    initScene();\n\n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","slug":"hello-world","published":1,"updated":"2016-10-21T02:37:36.434Z","photos":[],"link":"","_id":"ciuje1ks8000dd5u2409g4zzu","content":"点击更多预览！\n\n<a id=\"more\"></a>\n\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0,\n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n\n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n\n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n\n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n\n    if(r > rstop) discard;\n\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n\n    col = mix(fadeCol, col, distancefade);\n\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n\n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n\n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n\n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n\n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n\n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n\n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n\n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n\n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n    if(vsh == null || fsh == null) {\n        return null;\n    }\n\n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n\n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n\n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n\n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n\n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n\n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n\n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n\n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n\n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    unuseShader(pointFlower.program);\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n\n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n\n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n\n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n\n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n\n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n\n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n\n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n\n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n\n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n\n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n\n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    var prog = pointFlower.program;\n    useShader(prog);\n\n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n\n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n\n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n\n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n\n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n\n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n\n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n\n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n\n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n\n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n\n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n\n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n\n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n\n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n\n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n\n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n\n    gl.enable(gl.DEPTH_TEST);\n\n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n\n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n\n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n\n    window.addEventListener('resize', onResize);\n\n    setViewports();\n    createScene();\n    initScene();\n\n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>\n","excerpt":"点击更多预览！","more":"<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>无标题文档</title>\n</head>\n<style>\nbody {\n    padding:0;\n    margin:0;\n    overflow:hidden;\n\theight: 600px;\n}\ncanvas {\n    padding:0;\n    margin:0;\n}\ndiv.btnbg {\n    position:fixed;\n    left:0;\n    top:0;\n}\n</style>\n<body>\n<canvas id=\"sakura\"></canvas>\n<div class=\"btnbg\">\n</div>\n\n<!-- sakura shader -->\n<script id=\"sakura_point_vsh\" type=\"x-shader/x_vertex\">\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0,\n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n\n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n\n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}\n</script>\n<script id=\"sakura_point_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n\n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n\n    if(r > rstop) discard;\n\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n\n    col = mix(fadeCol, col, distancefade);\n\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n    gl_FragColor = vec4(col * 0.5, alpha);\n}\n</script>\n<!-- effects -->\n<script id=\"fx_common_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"bg_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}\n</script>\n<script id=\"fx_brightbuf_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}\n</script>\n<script id=\"fx_dirblur_r4_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}\n</script>\n<!-- effect fragment shader template -->\n<script id=\"fx_common_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_FragColor = texture2D(uSrc, texCoord);\n}\n</script>\n<!-- post processing -->\n<script id=\"pp_final_vsh\" type=\"x-shader/x_vertex\">\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}\n</script>\n<script id=\"pp_final_fsh\" type=\"x-shader/x_fragment\">\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}\n</script>\n</body>\n<script>\n// Utilities\nvar Vector3 = {};\nvar Matrix44 = {};\nVector3.create = function(x, y, z) {\n    return {'x':x, 'y':y, 'z':z};\n};\nVector3.dot = function (v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n};\nVector3.cross = function (v, v0, v1) {\n    v.x = v0.y * v1.z - v0.z * v1.y;\n    v.y = v0.z * v1.x - v0.x * v1.z;\n    v.z = v0.x * v1.y - v0.y * v1.x;\n};\nVector3.normalize = function (v) {\n    var l = v.x * v.x + v.y * v.y + v.z * v.z;\n    if(l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n    }\n};\nVector3.arrayForm = function(v) {\n    if(v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n    }\n    else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n    }\n    return v.array;\n};\nMatrix44.createIdentity = function () {\n    return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n};\nMatrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n    var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n    var w = h * aspect;\n\n    m[0] = 2.0 * near / w;\n    m[1] = 0.0;\n    m[2] = 0.0;\n    m[3] = 0.0;\n\n    m[4] = 0.0;\n    m[5] = 2.0 * near / h;\n    m[6] = 0.0;\n    m[7] = 0.0;\n\n    m[8] = 0.0;\n    m[9] = 0.0;\n    m[10] = -(far + near) / (far - near);\n    m[11] = -1.0;\n\n    m[12] = 0.0;\n    m[13] = 0.0;\n    m[14] = -2.0 * far * near / (far - near);\n    m[15] = 0.0;\n};\nMatrix44.loadLookAt = function (m, vpos, vlook, vup) {\n    var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n    Vector3.normalize(frontv);\n    var sidev = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(sidev, vup, frontv);\n    Vector3.normalize(sidev);\n    var topv = Vector3.create(1.0, 0.0, 0.0);\n    Vector3.cross(topv, frontv, sidev);\n    Vector3.normalize(topv);\n\n    m[0] = sidev.x;\n    m[1] = topv.x;\n    m[2] = frontv.x;\n    m[3] = 0.0;\n\n    m[4] = sidev.y;\n    m[5] = topv.y;\n    m[6] = frontv.y;\n    m[7] = 0.0;\n\n    m[8] = sidev.z;\n    m[9] = topv.z;\n    m[10] = frontv.z;\n    m[11] = 0.0;\n\n    m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n    m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n    m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n    m[15] = 1.0;\n};\n\n//\nvar timeInfo = {\n    'start':0, 'prev':0, // Date\n    'delta':0, 'elapsed':0 // Number(sec)\n};\n\n//\nvar gl;\nvar renderSpec = {\n    'width':0,\n    'height':0,\n    'aspect':1,\n    'array':new Float32Array(3),\n    'halfWidth':0,\n    'halfHeight':0,\n    'halfArray':new Float32Array(3)\n    // and some render targets. see setViewport()\n};\nrenderSpec.setSize = function(w, h) {\n    renderSpec.width = w;\n    renderSpec.height = h;\n    renderSpec.aspect = renderSpec.width / renderSpec.height;\n    renderSpec.array[0] = renderSpec.width;\n    renderSpec.array[1] = renderSpec.height;\n    renderSpec.array[2] = renderSpec.aspect;\n\n    renderSpec.halfWidth = Math.floor(w / 2);\n    renderSpec.halfHeight = Math.floor(h / 2);\n    renderSpec.halfArray[0] = renderSpec.halfWidth;\n    renderSpec.halfArray[1] = renderSpec.halfHeight;\n    renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n};\n\nfunction deleteRenderTarget(rt) {\n    gl.deleteFramebuffer(rt.frameBuffer);\n    gl.deleteRenderbuffer(rt.renderBuffer);\n    gl.deleteTexture(rt.texture);\n}\n\nfunction createRenderTarget(w, h) {\n    var ret = {\n        'width':w,\n        'height':h,\n        'sizeArray':new Float32Array([w, h, w / h]),\n        'dtxArray':new Float32Array([1.0 / w, 1.0 / h])\n    };\n    ret.frameBuffer = gl.createFramebuffer();\n    ret.renderBuffer = gl.createRenderbuffer();\n    ret.texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return ret;\n}\n\nfunction compileShader(shtype, shsrc) {\n\tvar retsh = gl.createShader(shtype);\n\n\tgl.shaderSource(retsh, shsrc);\n\tgl.compileShader(retsh);\n\n\tif(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n\t\tvar errlog = gl.getShaderInfoLog(retsh);\n\t\tgl.deleteShader(retsh);\n\t\tconsole.error(errlog);\n\t\treturn null;\n\t}\n\treturn retsh;\n}\n\nfunction createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n    var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n    var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n    if(vsh == null || fsh == null) {\n        return null;\n    }\n\n    var prog = gl.createProgram();\n    gl.attachShader(prog, vsh);\n    gl.attachShader(prog, fsh);\n\n    gl.deleteShader(vsh);\n    gl.deleteShader(fsh);\n\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n    }\n\n    if(uniformlist) {\n        prog.uniforms = {};\n        for(var i = 0; i < uniformlist.length; i++) {\n            prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n    }\n\n    if(attrlist) {\n        prog.attributes = {};\n        for(var i = 0; i < attrlist.length; i++) {\n            var attr = attrlist[i];\n            prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n    }\n\n    return prog;\n}\n\nfunction useShader(prog) {\n    gl.useProgram(prog);\n    for(var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);;\n    }\n}\n\nfunction unuseShader(prog) {\n    for(var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);;\n    }\n    gl.useProgram(null);\n}\n\n/////\nvar projection = {\n    'angle':60,\n    'nearfar':new Float32Array([0.1, 100.0]),\n    'matrix':Matrix44.createIdentity()\n};\nvar camera = {\n    'position':Vector3.create(0, 0, 100),\n    'lookat':Vector3.create(0, 0, 0),\n    'up':Vector3.create(0, 1, 0),\n    'dof':Vector3.create(10.0, 4.0, 8.0),\n    'matrix':Matrix44.createIdentity()\n};\n\nvar pointFlower = {};\nvar meshFlower = {};\nvar sceneStandBy = false;\n\nvar BlossomParticle = function () {\n    this.velocity = new Array(3);\n    this.rotation = new Array(3);\n    this.position = new Array(3);\n    this.euler = new Array(3);\n    this.size = 1.0;\n    this.alpha = 1.0;\n    this.zkey = 0.0;\n};\n\nBlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n    this.velocity[0] = vx;\n    this.velocity[1] = vy;\n    this.velocity[2] = vz;\n};\n\nBlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n    this.rotation[0] = rx;\n    this.rotation[1] = ry;\n    this.rotation[2] = rz;\n};\n\nBlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n    this.position[0] = nx;\n    this.position[1] = ny;\n    this.position[2] = nz;\n};\n\nBlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n    this.euler[0] = rx;\n    this.euler[1] = ry;\n    this.euler[2] = rz;\n};\n\nBlossomParticle.prototype.setSize = function (s) {\n    this.size = s;\n};\n\nBlossomParticle.prototype.update = function (dt, et) {\n    this.position[0] += this.velocity[0] * dt;\n    this.position[1] += this.velocity[1] * dt;\n    this.position[2] += this.velocity[2] * dt;\n\n    this.euler[0] += this.rotation[0] * dt;\n    this.euler[1] += this.rotation[1] * dt;\n    this.euler[2] += this.rotation[2] * dt;\n};\n\nfunction createPointFlowers() {\n    // get point sizes\n    var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n    renderSpec.pointSize = {'min':prm[0], 'max':prm[1]};\n\n    var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent;\n    var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent;\n\n    pointFlower.program = createShader(\n        vtxsrc, frgsrc,\n        ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],\n        ['aPosition', 'aEuler', 'aMisc']\n    );\n\n    useShader(pointFlower.program);\n    pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n    pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n    // paramerters: velocity[3], rotate[3]\n    pointFlower.numFlowers = 1600;\n    pointFlower.particles = new Array(pointFlower.numFlowers);\n    // vertex attributes {position[3], euler_xyz[3], size[1]}\n    pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n    pointFlower.positionArrayOffset = 0;\n    pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n    pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\n    pointFlower.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    unuseShader(pointFlower.program);\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n    }\n}\n\nfunction initPointFlowers() {\n    //area\n    pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n    pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n\n    pointFlower.fader.x = 10.0; //env fade start\n    pointFlower.fader.y = pointFlower.area.z; //env fade half\n    pointFlower.fader.z = 0.1;  //near fade start\n\n    //particles\n    var PI2 = Math.PI * 2.0;\n    var tmpv3 = Vector3.create(0, 0, 0);\n    var tmpv = 0;\n    var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);};\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i];\n\n        //velocity\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n\n        //rotation\n        tmpprtcl.setRotation(\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5,\n            symmetryrand() * PI2 * 0.5\n        );\n\n        //position\n        tmpprtcl.setPosition(\n            symmetryrand() * pointFlower.area.x,\n            symmetryrand() * pointFlower.area.y,\n            symmetryrand() * pointFlower.area.z\n        );\n\n        //euler\n        tmpprtcl.setEulerAngles(\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0,\n            Math.random() * Math.PI * 2.0\n        );\n\n        //size\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n    }\n}\n\nfunction renderPointFlowers() {\n    //update\n    var PI2 = Math.PI * 2.0;\n    var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n    var repeatPos = function (prt, cmp, limit) {\n        if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n            //out of area\n            if(prt.position[cmp] > 0) {\n                prt.position[cmp] -= limit * 2.0;\n            }\n            else {\n                prt.position[cmp] += limit * 2.0;\n            }\n        }\n    };\n    var repeatEuler = function (prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n        if(prt.euler[cmp] < 0.0) {\n            prt.euler[cmp] += PI2;\n        }\n    };\n\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n\n        prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n        prtcl.zkey = (camera.matrix[2] * prtcl.position[0]\n                    + camera.matrix[6] * prtcl.position[1]\n                    + camera.matrix[10] * prtcl.position[2]\n                    + camera.matrix[14]);\n    }\n\n    // sort\n    pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;});\n\n    // update data\n    var ipos = pointFlower.positionArrayOffset;\n    var ieuler = pointFlower.eulerArrayOffset;\n    var imisc = pointFlower.miscArrayOffset;\n    for(var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        pointFlower.dataArray[ipos] = prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = prtcl.size;\n        pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n        imisc += 2;\n    }\n\n    //draw\n    gl.enable(gl.BLEND);\n    //gl.disable(gl.DEPTH_TEST);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    var prog = pointFlower.program;\n    useShader(prog);\n\n    gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n    gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n    gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n    gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\n    gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n\n    // doubler\n    for(var i = 1; i < 2; i++) {\n        var zpos = i * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n        pointFlower.offset[0] = pointFlower.area.x *  1.0;\n        pointFlower.offset[1] = pointFlower.area.y *  1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n    }\n\n    //main\n    pointFlower.offset[0] = 0.0;\n    pointFlower.offset[1] = 0.0;\n    pointFlower.offset[2] = 0.0;\n    gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n    gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(prog);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n}\n\n// effects\n//common util\nfunction createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n    var ret = {};\n    var unifs = ['uResolution', 'uSrc', 'uDelta'];\n    if(exunifs) {\n        unifs = unifs.concat(exunifs);\n    }\n    var attrs = ['aPosition'];\n    if(exattrs) {\n        attrs = attrs.concat(exattrs);\n    }\n\n    ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n    useShader(ret.program);\n\n    ret.dataArray = new Float32Array([\n        -1.0, -1.0,\n         1.0, -1.0,\n        -1.0,  1.0,\n         1.0,  1.0\n    ]);\n    ret.buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    unuseShader(ret.program);\n\n    return ret;\n}\n\n// basic usage\n// useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize\n// gl.uniform**(...); //additional uniforms\n// drawEffect()\n// unuseEffect(prog)\n// TEXTURE0 makes src\nfunction useEffect(fxobj, srctex) {\n    var prog = fxobj.program;\n    useShader(prog);\n    gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n    if(srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n    }\n}\nfunction drawEffect(fxobj) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n    gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n}\nfunction unuseEffect(fxobj) {\n    unuseShader(fxobj.program);\n}\n\nvar effectLib = {};\nfunction createEffectLib() {\n\n    var vtxsrc, frgsrc;\n    //common\n    var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent;\n\n    //background\n    frgsrc = document.getElementById(\"bg_fsh\").textContent;\n    effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);\n\n    // make brightpixels buffer\n    frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent;\n    effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);\n\n    // direction blur\n    frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent;\n    effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);\n\n    //final composite\n    vtxsrc = document.getElementById(\"pp_final_vsh\").textContent;\n    frgsrc = document.getElementById(\"pp_final_fsh\").textContent;\n    effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);\n}\n\n// background\nfunction createBackground() {\n    //console.log(\"create background\");\n}\nfunction initBackground() {\n    //console.log(\"init background\");\n}\nfunction renderBackground() {\n    gl.disable(gl.DEPTH_TEST);\n\n    useEffect(effectLib.sceneBg, null);\n    gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n    drawEffect(effectLib.sceneBg);\n    unuseEffect(effectLib.sceneBg);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n// post process\nvar postProcess = {};\nfunction createPostProcess() {\n    //console.log(\"create post process\");\n}\nfunction initPostProcess() {\n    //console.log(\"init post process\");\n}\n\nfunction renderPostProcess() {\n    gl.enable(gl.TEXTURE_2D);\n    gl.disable(gl.DEPTH_TEST);\n    var bindRT = function (rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n        if(isclear) {\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n    };\n\n    //make bright buff\n    bindRT(renderSpec.wHalfRT0, true);\n    useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n    drawEffect(effectLib.mkBrightBuf);\n    unuseEffect(effectLib.mkBrightBuf);\n\n    // make bloom\n    for(var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n    }\n\n    //display\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    useEffect(effectLib.finalComp, renderSpec.mainRT);\n    gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n    drawEffect(effectLib.finalComp);\n    unuseEffect(effectLib.finalComp);\n\n    gl.enable(gl.DEPTH_TEST);\n}\n\n/////\nvar SceneEnv = {};\nfunction createScene() {\n    createEffectLib();\n    createBackground();\n    createPointFlowers();\n    createPostProcess();\n    sceneStandBy = true;\n}\n\nfunction initScene() {\n    initBackground();\n    initPointFlowers();\n    initPostProcess();\n\n    //camera.position.z = 17.320508;\n    camera.position.z = pointFlower.area.z + projection.nearfar[0];\n    projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n    Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n}\n\nfunction renderScene() {\n    //draw\n    Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n\n    gl.enable(gl.DEPTH_TEST);\n\n    //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n    gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n    gl.clearColor(0.005, 0, 0.05, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    renderBackground();\n    renderPointFlowers();\n    renderPostProcess();\n}\n\n/////\nfunction onResize(e) {\n    makeCanvasFullScreen(document.getElementById(\"sakura\"));\n    setViewports();\n    if(sceneStandBy) {\n        initScene();\n    }\n}\n\nfunction setViewports() {\n    renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n\n    gl.clearColor(0.2, 0.2, 0.5, 1.0);\n    gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n    var rtfunc = function (rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n        if(rt) deleteRenderTarget(rt);\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n    };\n    rtfunc('mainRT', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT0', renderSpec.width, renderSpec.height);\n    rtfunc('wFullRT1', renderSpec.width, renderSpec.height);\n    rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);\n    rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);\n}\n\nfunction render() {\n    renderScene();\n}\n\nvar animating = true;\nfunction toggleAnimation(elm) {\n    animating ^= true;\n    if(animating) animate();\n    if(elm) {\n        elm.innerHTML = animating? \"Stop\":\"Start\";\n    }\n}\n\nfunction stepAnimation() {\n    if(!animating) animate();\n}\n\nfunction animate() {\n    var curdate = new Date();\n    timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n    timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n    timeInfo.prev = curdate;\n\n    if(animating) requestAnimationFrame(animate);\n    render();\n}\n\nfunction makeCanvasFullScreen(canvas) {\n    var b = document.body;\n\tvar d = document.documentElement;\n\tfullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);\n\tfullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);\n\tcanvas.width = fullw;\n\tcanvas.height = fullh;\n}\n\nwindow.addEventListener('load', function(e) {\n    var canvas = document.getElementById(\"sakura\");\n    try {\n        makeCanvasFullScreen(canvas);\n        gl = canvas.getContext('experimental-webgl');\n    } catch(e) {\n        alert(\"WebGL not supported.\" + e);\n        console.error(e);\n        return;\n    }\n\n    window.addEventListener('resize', onResize);\n\n    setViewports();\n    createScene();\n    initScene();\n\n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate();\n});\n\n//set window.requestAnimationFrame\n(function (w, r) {\n    w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); };\n})(window, 'equestAnimationFrame');\n</script>\n</html>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciuje1krg0001d5u2dsgwyyeu","tag_id":"ciuje1krs0004d5u2zov22ndc","_id":"ciuje1ks50009d5u2xst2etuz"},{"post_id":"ciuje1krn0003d5u2zk5ndx1c","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1ksd000hd5u23ump4kuo"},{"post_id":"ciuje1krn0003d5u2zk5ndx1c","tag_id":"ciuje1ks7000cd5u25jfyndfv","_id":"ciuje1ksd000id5u2wztl7bhn"},{"post_id":"ciuje1krn0003d5u2zk5ndx1c","tag_id":"ciuje1ksa000ed5u26xs0psdm","_id":"ciuje1kse000kd5u28v622yqb"},{"post_id":"ciuje1krn0003d5u2zk5ndx1c","tag_id":"ciuje1ksb000fd5u22ymg6ebx","_id":"ciuje1kse000ld5u2a5aoolzf"},{"post_id":"ciuje1kry0005d5u2dwc5acdm","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1ksg000od5u2et4gmia9"},{"post_id":"ciuje1kry0005d5u2dwc5acdm","tag_id":"ciuje1ksd000jd5u2lmj8174b","_id":"ciuje1ksg000pd5u21jr97otg"},{"post_id":"ciuje1kry0005d5u2dwc5acdm","tag_id":"ciuje1kse000md5u2319l6gd7","_id":"ciuje1ksh000rd5u2sg8wm3wv"},{"post_id":"ciuje1ks00006d5u2azcdg1dm","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1ksj000ud5u2zahxazj0"},{"post_id":"ciuje1ks00006d5u2azcdg1dm","tag_id":"ciuje1ksh000qd5u2tdhsa999","_id":"ciuje1ksk000vd5u21jksisdq"},{"post_id":"ciuje1ks00006d5u2azcdg1dm","tag_id":"ciuje1ksb000fd5u22ymg6ebx","_id":"ciuje1ksm000xd5u2txqxp3ea"},{"post_id":"ciuje1ks20007d5u2vk5nixyz","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1ksp0011d5u2ghgcnzd4"},{"post_id":"ciuje1ks20007d5u2vk5nixyz","tag_id":"ciuje1ksd000jd5u2lmj8174b","_id":"ciuje1ksp0012d5u2ronxezuh"},{"post_id":"ciuje1ks20007d5u2vk5nixyz","tag_id":"ciuje1kse000md5u2319l6gd7","_id":"ciuje1ksr0014d5u2h1bejy20"},{"post_id":"ciuje1ks20007d5u2vk5nixyz","tag_id":"ciuje1ksm000zd5u2htj8nb5w","_id":"ciuje1ksr0015d5u21veywf7w"},{"post_id":"ciuje1ks5000ad5u2cr5w5ojt","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1kss0017d5u2w710pikh"},{"post_id":"ciuje1ks5000ad5u2cr5w5ojt","tag_id":"ciuje1kso0010d5u2mgcdykm5","_id":"ciuje1kss0018d5u25o7w0a6l"},{"post_id":"ciuje1ks5000ad5u2cr5w5ojt","tag_id":"ciuje1ksp0013d5u2e2bcuk9t","_id":"ciuje1kst001ad5u2kdyodn4h"},{"post_id":"ciuje1ks7000bd5u25k1krp6l","tag_id":"ciuje1ks30008d5u2gugnduci","_id":"ciuje1ksu001dd5u2f6mb3od8"},{"post_id":"ciuje1ks7000bd5u25k1krp6l","tag_id":"ciuje1ksr0016d5u2d0ti78mg","_id":"ciuje1ksu001ed5u2zm18yini"},{"post_id":"ciuje1ks7000bd5u25k1krp6l","tag_id":"ciuje1kss0019d5u2mytfn7tp","_id":"ciuje1ksu001fd5u2fh5j9gyd"},{"post_id":"ciuje1ks7000bd5u25k1krp6l","tag_id":"ciuje1ksm000zd5u2htj8nb5w","_id":"ciuje1ksu001gd5u2cymgsj7h"},{"post_id":"ciuje1ks8000dd5u2409g4zzu","tag_id":"ciuje1ksu001cd5u2zv3mi7ec","_id":"ciuje1ksu001hd5u2rbd3rz6e"}],"Tag":[{"name":"Editor","_id":"ciuje1krs0004d5u2zov22ndc"},{"name":"前段","_id":"ciuje1ks30008d5u2gugnduci"},{"name":"node","_id":"ciuje1ks7000cd5u25jfyndfv"},{"name":"nvm","_id":"ciuje1ksa000ed5u26xs0psdm"},{"name":"npm","_id":"ciuje1ksb000fd5u22ymg6ebx"},{"name":"博客","_id":"ciuje1ksd000jd5u2lmj8174b"},{"name":"经验","_id":"ciuje1kse000md5u2319l6gd7"},{"name":"note","_id":"ciuje1ksh000qd5u2tdhsa999"},{"name":"webpack","_id":"ciuje1ksm000zd5u2htj8nb5w"},{"name":"GIT","_id":"ciuje1kso0010d5u2mgcdykm5"},{"name":"SSH","_id":"ciuje1ksp0013d5u2e2bcuk9t"},{"name":"笔记","_id":"ciuje1ksr0016d5u2d0ti78mg"},{"name":"框架搭建","_id":"ciuje1kss0019d5u2mytfn7tp"},{"name":"HTML5","_id":"ciuje1ksu001cd5u2zv3mi7ec"}]}}